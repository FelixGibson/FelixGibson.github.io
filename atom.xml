<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Felix&#39;s Blog</title>
  
  
  <link href="https://felixgibson.github.io/atom.xml" rel="self"/>
  
  <link href="https://felixgibson.github.io/"/>
  <updated>2023-03-13T23:45:23.422Z</updated>
  <id>https://felixgibson.github.io/</id>
  
  <author>
    <name>Felix Luo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>A collection of some thoughts about Blockchain and Web3</title>
    <link href="https://felixgibson.github.io/2023/03/05/2023-03-05/"/>
    <id>https://felixgibson.github.io/2023/03/05/2023-03-05/</id>
    <published>2023-03-05T06:39:00.000Z</published>
    <updated>2023-03-13T23:45:23.422Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Blockchains-are-cities"><a href="#Blockchains-are-cities" class="headerlink" title="Blockchains are cities"></a>Blockchains are cities</h3><blockquote><p>Blockchains are cities.-written by Haseeb Qureshi,  <a href="https://medium.com/dragonfly-research/blockchains-are-cities-564327013f86">medium</a> . </p></blockquote><p>City has a relatively low network effect compared to platforms like Amazon, Meta, and Twitter. Ethereum has the first mover advantage which attracts more developers and users than its competitors. But since Ethereum has some limited constraints and cannot scale unlimitedly, other layer 1 can partially attract some part of the users and developers.<br>I think this metaphor is very impressive. Here are some quotes.</p><blockquote><p>Networks are the wrong analogy for blockchains. Blockchains are physically constrained. Blockchains cannot expand to infinite block space because blockchains require many independent small validators; if blocks were arbitrarily big, the blockchain would no longer be decentralized.<br>Smart contract chains are more like cities. If you embrace this mental model, then the dynamics around L1 blockchains becomes less mysterious.<br>The answer is obvious. There’s a power law distribution to city dominance, but there are many cities that matter.<br>Other L1s will be valuable too. But they will continue to differentiate. NYC, LA, Chicago, and Houston are enduring cities because their institutions and cultures are different from each other.<br>Application-specific blockchains will remain niche.<br>In the physical world, transportation accounts for almost half the GDP of housing. If we see anything like that in crypto, cross-chain bridges will become extremely valuable.     </p></blockquote><h3 id="Crypto-Moats"><a href="#Crypto-Moats" class="headerlink" title="Crypto Moats"></a>Crypto Moats</h3><blockquote><p>Crypto Moats-<a href="https://www.varunsrinivasan.com/2020/09/29/crypto-moats">varunsrinivasan</a>    </p></blockquote><p>In web2, the moats are a very strong network effect, since every web2 app has built its own “great wall” to make cross-app interoperability almost impossible. However, in Web3, despite the network effect which still exists but become weaker, data transfer and sharing between apps is much more easily. So what are the crypto moats for web3 apps? varunsrinivasan think it is the brand and ownership.</p><blockquote><p>Network effects are becoming weaker, while brand effects are getting stronger.<br>Platforms, on the other hand, create network effects when they aren’t interoperable. Ethereum has a community of developers building tools, which attracts more developers and users. Competing blockchains must convince developers to switch and rewrite years’ worth of software. Because the value isn’t transferrable, Ethereum has a strong moat. These network effects reward first-movers and work against all kinds of competitors.</p></blockquote><h3 id="Criticism-about-the-scarce-property-of-NFT"><a href="#Criticism-about-the-scarce-property-of-NFT" class="headerlink" title="Criticism about the scarce property of NFT"></a>Criticism about the scarce property of NFT</h3><p>Many people have criticized NFT is built on scarce, but the Internet is built on abundance. cdixon and Sylve both think that NFT doesn’t make the Internet more scarce instead creates another choice. </p><blockquote><p>cdixon.eth-<a href="https://twitter.com/cdixon/status/1477416947667005440">twitter</a><br>NFTs make art, music, writing, games, and other creative content more abundant, not more scarce<br>Many critics of NFTs claim the opposite — that NFTs restrict access to creative content.<br>This is not a critique of NFTs. This is a critique of a fictional caricature of NFTs dreamt up by critics.</p></blockquote><blockquote><p>The Fundamental Ideological Divide Between Web2 and Web3-<a href="https://mirror.xyz/sylve.eth/Vkv36_gXeD5ABtLlRmNwnxS7F_-jsSpX4bRNrIf-uiU">mirror.xyz</a><br>The argument is the following: the Internet is not based on property but abundance. Native digital content has the very weird property of being naturally abundant. If you create a GIF or a JPEG you can generate unlimited copies of it and distribute it to everyone. Unlimited stock. Cornucopia of copy&#x2F;paste. Internet communities have flourished on the premise of remixing and sharing content for free with others, and it works really well: memes, copypastas, webcomics, emerged because of this. Therefore, if the Internet is based on abundance, why would you divide up the commons and sell them? Why would you introduce scarcity? Why would you introduce property? Why must you be so greedy?<br>And history tells us we don’t <em>need</em> records of ownership, token incentives, ICOs, or even money, to build impressive projects. Think about what has been achieved by the FOSS movement: Linux, Wikipedia are testament to the heritage of this ethos. The blockchain community cannot forget that we built most of the incredible stuff the Internet runs on with no records of ownership or money.<br>This is why I don’t necessarily like Web3 as a definition of the blockchain <a href="https://avc.com/2015/02/the-carlota-perez-framework/">technological paradigm</a>. It is not a necessary strict improvement compared to what came before, it’s not an <em>optimization</em>, it’s a choice. It’s a technological paradigm that enables creating what was previously impossible (native digital ownership for example) but this does not entail that it is strictly superior to the ways of the past or that it will replace it.  disruption]]<br>In the end I believe there’s room for both frameworks. Just like <a href="https://www.youtube.com/watch?v=W8r-tXRLazs">video didn’t actually kill the radio stars</a> (podcasts anyone?), Web3 will not kill Web2.<br>Digital ownership will not kill abundance.</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Blockchains-are-cities&quot;&gt;&lt;a href=&quot;#Blockchains-are-cities&quot; class=&quot;headerlink&quot; title=&quot;Blockchains are cities&quot;&gt;&lt;/a&gt;Blockchains are citi</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>忘记目标专注体系</title>
    <link href="https://felixgibson.github.io/2023/02/25/2023-02-25/"/>
    <id>https://felixgibson.github.io/2023/02/25/2023-02-25/</id>
    <published>2023-02-25T08:59:00.000Z</published>
    <updated>2023-03-13T23:45:23.422Z</updated>
    
    <content type="html"><![CDATA[<p>一些有意思的观点</p><h2 id="忘记目标，专注体系"><a href="#忘记目标，专注体系" class="headerlink" title="忘记目标，专注体系"></a>忘记目标，专注体系</h2><p>Farnam Street 有一片文章写的还可以，<a href="https://fs.blog/habits-vs-goals/"><em>Habits vs. Goals: A Look at the Benefits of a Systematic Approach to Life</em></a> ，文中提到了相较于专注于目标，我们更应该专注于习惯。类似的观点《掌控习惯》这本书也有提到。</p><p>目标是关于你想要达到的结果，而体系是涉及导致这些结果的过程。专注于目标会带来4个问题。</p><ul><li><p>问题1：赢家和输家心怀相同的目标。</p></li><li><p>问题2：实现一个目标只是短暂的改变</p></li><li><p>问题3：目标束缚了你的幸福感。</p></li></ul><blockquote><p>任何目标都隐含着这样的假想：“一旦我实现了那个目标，我就会很快乐。”目标优先心态的问题是，你一直在延迟享受快乐，总是寄希望于下一个里程碑的实现。<br>此外，目标会导致“非此即彼”的冲突：你要么实现了预定目标，最终取得了成功，要么你失败了并令人大失所望。你在精神上把自己禁锢在一种狭隘的幸福观之中，这属于自我误导。你实际走出的人生道路，不太可能与你出发时心目中的旅程完全匹配。成功之路不止一条，你毫无必要认定只有某个特定场景的出现，才能让你对自己的人生感到满意。<br>系统至上的心态对此提供了解药。当你爱上过程而不是结果时，你不必等待容许自己享受快乐的那一刻的到来。只要你创建的体系在正常运行，你就会在整个过程中感受到快乐。另外，一个体系取得成功的方式有多种，而不仅仅是你最初想象的那一种。</p></blockquote><ul><li>问题4：目标与长远改进的大方向不一致。</li></ul><blockquote><p>最后，以目标为导向的思维定式会产生“溜溜球”效应。许多跑步运动员可以连续不断地刻苦训练几个月，但是当他们完成了比赛之后就会偃旗息鼓，停止训练。赛事已然结束，不再激励他们刻苦训练。当你所有的努力都集中在一个特定的目标上时，一旦目标实现，推动你努力前行的动力也就失去了依托。这就是为什么许多人在完成预定目标后又恢复了旧习惯。<br>设定目标的目的是赢得比赛。构建体系的目的是持续参与这项赛事。意在长远的思维方式不会拘泥于具体的目标。这不是为了取得任何单一的成就，而是一个精益求精、日趋进步的循环过程。归根结底，你对这个过程锲而不舍的坚持决定着你的进步。</p></blockquote><h2 id="最大熵模型"><a href="#最大熵模型" class="headerlink" title="最大熵模型"></a>最大熵模型</h2><p>VC领域其实有一个幂数定律，<em>The Power Law</em>  整本书就是讲的是大概是这个定律。同样的，吴军在《数学之美》和《硅谷之谜》两本书也讲到了这个mental model。</p><p>摘自《硅谷之谜》</p><blockquote><p>在信息论里，有一个最大熵原则，具体有两层含义：首先，在没有信息的情况下，不能对未来做任何主观的假设；其次，在获得了一些知识或者信息的情况下，作出的判断首先要符合这种知识（当然对其他事物的判断，依然不能做任何先验的假设）。这样才能做到风险最小，回报最大。好的风险投资人不做事先的假定，不知道未来的发展方向一定是什么样的，他们希望从创业者那里了解这种信息。在得到一些信息后，他们作出适当的反应。而且为了降低投资风险，他们不会把鸡蛋放在一个篮子里。同时，一旦察觉到某种技术趋势，他们会让自己的一部分投资符合这种技术趋势。<br>风险投资的第二个原则，与香农第一定律和霍夫曼编码原则相一致，也即要把最多的资源投给最有可能成功的项目，当然这个“最有可能”通常不是预测出来的，而是根据实际运营的结果看出来的。比如风险投资人先对100个项目进行评估，删掉不靠谱的，然后选择20个各方面都比较好的项目进行投资。在投资之前他们并不在意这20个项目哪一个就比另一个好。过了一段时间（比如在这些项目需要下一轮融资时），投资人会重新评估这些项目，根据创始团队的表现和项目的进展，对发展超出预期的项目增加投资（专业术语叫做Double Down），对表现一般的项目就顺其自然，对于表现差的项目甚至会设法退出一部分投资。这样，到了第二轮投资人可能又对其中的六到七个项目追加了投资。类似地，投资人会根据项目的表现不断作出及时反应。最终，他们会在成功的项目中占有尽可能多的股份，在失败的项目中则将损失控制到最小。</p></blockquote><p>对企业，最大熵模型的运用：</p><p>在字节跳动公司内存在大大小小数百个项目，那么如何分配资源呢。就是根据最大熵模型。在没有信息的情况下，不能主观假设这个app能够做成还是不能做成。当项目开始有进展或者达到目标了，就投入再多一点的资源。这样那些最优可能成功的项目就会被给予更多的资源，也就更容易跑出来。</p><p>对个人，最大熵模型的运用：</p><p>管理风险。从高风险，可能有高回报，到低风险，低回报，技术存在于这样一条谱带上，把你所有的金钱都投入突然崩盘的高风险股票并不是要给好主意；你也不应该太保守，错过可能的机会。不要把你所有的技术鸡蛋放在一个篮子里。</p><p>ps. 关于 <em>The Power Law</em> 可以看张小珺的这篇文章<a href="https://mp.weixin.qq.com/s?__biz=MzU0MDk3ODUwMA==&mid=2247484165&idx=1&sn=5a04910e76e1b3567ccc2e9fb36fdafe&chksm=fb31bf2ecc4636387ec37a0c92a79f81aaa6594401c952c0f4a32d1cd0f3ff6d2a023661de82#rd">《和作家马拉比聊《The Power Law》：硅谷风投的起源、秘密和大人物肖像》</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一些有意思的观点&lt;/p&gt;
&lt;h2 id=&quot;忘记目标，专注体系&quot;&gt;&lt;a href=&quot;#忘记目标，专注体系&quot; class=&quot;headerlink&quot; title=&quot;忘记目标，专注体系&quot;&gt;&lt;/a&gt;忘记目标，专注体系&lt;/h2&gt;&lt;p&gt;Farnam Street 有一片文章写的还可以，&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>专一到通用</title>
    <link href="https://felixgibson.github.io/2022/12/04/2022-12-04/"/>
    <id>https://felixgibson.github.io/2022/12/04/2022-12-04/</id>
    <published>2022-12-04T08:12:00.000Z</published>
    <updated>2023-03-13T23:45:23.422Z</updated>
    
    <content type="html"><![CDATA[<h3 id="专一到通用"><a href="#专一到通用" class="headerlink" title="专一到通用"></a>专一到通用</h3><p>对于问题，很多问题如果一开始就想有一个通用的解法，其实是非常难的。</p><p>吴军在《见识》之中提到了一个观点，对于创业型公司来说，如果一开始就定位为平台产品，那么很容易失败。</p><blockquote><p>虽然我在《浪潮之巅》一书中 一直讲，在商业中绕不过去的一环能挣到最大的钱，而掌握这样一环的都是平台公司，但是，没有人一开始 就能够做出一个通用平台。今天大家看到谷歌挣大钱，阿里巴巴可以控制上下游，很风光，但是在早期，它 们的业务面都很窄。谷歌靠的是搜索，它最初一两年的收入并不高；阿里巴巴则是做 B2B(企业对企业电子 商务）牵线搭桥的苦差事，只不过后来它们在单点上做得非常精深，实现了利用核心优势的突破。腾讯的情 况也是类似，靠聊天软件起家，分发短信挣点小钱，通过游戏挣钱已经是非常晚的事情了。能够单点突破改 变整个行业的公司其实并不多，做到这个境界常常是结果，而不是一开始的目标。 </p></blockquote><p>amazon是从书店发家的，京东从电器&#x2F;电子发家。医学也有一个例子。对于癌症，最开始大家都想设计一个东西去完全解决所有癌症，但是后面出现了针对特定类型癌症的解决方案。还有GAI，我认为通用人工智能肯定出现比较晚，而特定领域的人工智能应该是最早可以实现的，最早可以商用的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;专一到通用&quot;&gt;&lt;a href=&quot;#专一到通用&quot; class=&quot;headerlink&quot; title=&quot;专一到通用&quot;&gt;&lt;/a&gt;专一到通用&lt;/h3&gt;&lt;p&gt;对于问题，很多问题如果一开始就想有一个通用的解法，其实是非常难的。&lt;/p&gt;
&lt;p&gt;吴军在《见识》之中提到了一个观点，</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>创新</title>
    <link href="https://felixgibson.github.io/2022/11/26/2022-11-26/"/>
    <id>https://felixgibson.github.io/2022/11/26/2022-11-26/</id>
    <published>2022-11-26T02:46:00.000Z</published>
    <updated>2023-03-13T23:45:23.422Z</updated>
    
    <content type="html"><![CDATA[<h3 id="创新的本质是连接"><a href="#创新的本质是连接" class="headerlink" title="创新的本质是连接"></a>创新的本质是连接</h3><p>创新的本质是对已有的东西以新奇的方式进行组合。我喜欢的一个博主james clear在 <a href="https://jamesclear.com/creativity">Creativity</a> 这篇博客中写到</p><blockquote><p>The creative process is the act of making new connections between old ideas or recognizing relationships between concepts. Creative thinking is not about generating something new from a blank slate, but rather about taking what is already present and combining those bits and pieces in a way that has not been done previously.</p></blockquote><p> 《伟大创意的诞生：创新自然史》 这本书中也提到了同样的观点：</p><blockquote><p>创意一般是像进化一样是基于已有环境的小改进，偶尔有大的跳跃式的创意只能失败，比如19世纪巴贝奇的分析机，可以说是计算机的爷爷，理论上可行，工程上来说当时完全不现实；<br>    创意的诞生需要有网络，并且创意可以产生新的连接。比如说从狩猎社会到农业社会，社会关系网络更大了，人与人的交互更多了，人类的发明创造随之增多；<br>    城市的创新指数随着规模的扩大而呈指数级增长；<br>    开放促进创意的产生；</p></blockquote><h3 id="Don’t-Start-From-Scratch"><a href="#Don’t-Start-From-Scratch" class="headerlink" title="Don’t Start From Scratch"></a>Don’t Start From Scratch</h3><p>不要从0开始。james clear在<a href="https://jamesclear.com/dont-start-from-scratch">How Innovative Ideas Arise</a> 提到了为什么从0开始是一个坏主意。</p><blockquote><p>Too often, we assume innovative ideas and meaningful changes require a blank slate. When business projects fail, we say things like, “Let’s go back to the drawing board.” When we consider the habits we would like to change, we think, “I just need a fresh start.” However, creative progress is rarely the result of throwing out all previous ideas and innovations and completely re-imagining of the world.</p></blockquote><h3 id="发现而非创造"><a href="#发现而非创造" class="headerlink" title="发现而非创造"></a>发现而非创造</h3><p>创新应该是去发现可能去颠覆现有产业的技术，而不是去自己发明，吴军在《见识》这本书中提到了硅谷的N+1创新法</p><blockquote><p>今天，不少人也把颠覆现有行业放在嘴边，但是真正实现了颠覆的人很少，反而山寨的人却很多，这又是为什么呢？因为叛逆者们颠覆现有秩序不是一件容易的事情，要想改变世界，需要有常人所没有的执着。桂谷的叛逆者们为了达到目的，首先会想尽办法去寻找那些可能颠覆现有产业的技术（注意：是寻找而不是发明)，这样，那些在其他地区被发明却又被束之高阁的技术，就被硅谷的颠覆者带到硅谷继续发扬光大。在前一节中我讲到过，新技术常常不可靠，时灵时不灵，要将这样的技术转变成产品，需要有足够的耐心和智慧，克服一个又一个困难，走完从1到N的漫长路程。</p></blockquote><h3 id="国产替代的危害"><a href="#国产替代的危害" class="headerlink" title="国产替代的危害"></a>国产替代的危害</h3><p>之前公司内部有一个分享，当时一个同事提了一个非常好的观点，国产替代，其实对公司的创新是有所损害的。真正的创新，应该是去做全球化，去和国外的优秀公司竞争，比拼，而不是在一个墙内做<code>copy to china</code>的工作。</p><blockquote><p>那我觉得国产替代这个事情，我觉得它是一个非常非常 tricky 的一个地方。就是一方面你是觉得说国产替代让你的确可以有的一个契机去进入这些这些大的这些大企业。但是这个就跟我们刚才所说的创业创新这东西本质它又有一些背离。比如说这些企业本身它不是因为市场不是因为真正需求的原因而去换的，所以它不是你最优秀客户，因为它并没有痛点，他不是因为我是真正使用这个产品的特点而去换的，所以这些用户你去服务他，他给你的需求会被会把你带偏。所以这个对于早期的创业公司来说，你最需要就是最优质的这个用户的反馈来帮你打磨产品。然后第二个就是第二个我觉得就是我们刚才所说的这个就是他没有办法帮你去，就是他会非常牵扯你的人员的效率。因为这样就是越是这些企业，它的历史包袱越多，就你越是得帮它做一些你的这个核心创新之外的事情。这个会这样，会极大的这个降低企业这个迭代的速度。所以我觉得国产替代这个事情是非常双刃剑的一个一一个事情。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;创新的本质是连接&quot;&gt;&lt;a href=&quot;#创新的本质是连接&quot; class=&quot;headerlink&quot; title=&quot;创新的本质是连接&quot;&gt;&lt;/a&gt;创新的本质是连接&lt;/h3&gt;&lt;p&gt;创新的本质是对已有的东西以新奇的方式进行组合。我喜欢的一个博主james clear在 &lt;a</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>管道化和Intel and the Danger of Integration</title>
    <link href="https://felixgibson.github.io/2022/10/29/2022-10-29/"/>
    <id>https://felixgibson.github.io/2022/10/29/2022-10-29/</id>
    <published>2022-10-29T03:09:00.000Z</published>
    <updated>2023-03-13T23:45:23.422Z</updated>
    
    <content type="html"><![CDATA[<h3 id="管道化"><a href="#管道化" class="headerlink" title="管道化"></a>管道化</h3><p>最近非常有时间研究了一下”管道化”这个话题。”管道化”就是价值捕获的向上流动。一个比较明显的例子，就是微信把各大运营商给管道化了。<br>其实在各个领域都能看到管道化的例子。</p><ol><li>区块链领域：各种Layer2有把Ethereum管道化的趋势，但不太明显</li><li>语言领域: Kotlin有把Java管道化的趋势，TypeScript也有把JavaScript管道化的趋势</li><li>金融：移动支付把银行给管道化了</li><li>互联网：前端把原生客户端给管道化了</li><li>直播带货：各大KOL把平台给管道化了，比如主播可以去淘宝，也可以去抖音带货，这样议价能力比较强，不会被平台束缚。</li><li>Chrome把操作系统管道化了</li><li>k8s把Docker管道化了</li></ol><p>如果处在层次的下层，如果避免被上层管道化？其实观察这些现象，会发现一些特点。管道化和被卡脖子的区别是，管道化有多个下层。比如chrome不止在windows上运行，也能在linux, macOS上运行。k8s不止运行docker，也支持podman，手机前端下面不止有android还有iOS。而被卡脖子则是只有一个下层，比如微信小程序。 微信小程序就很难把微信管道化。</p><p>关于管道化，还有一篇文章讲的不错：我们为什么不尽早施行国产 CPU＋国产 Linux 系统战略呢？-<a href="https://www.zhihu.com/question/328134586/answer/831317109">zhihu</a></p><blockquote><p>如果A和B中断一切X领域的交流，那么大概率上、在可预见的未来，在X领域，A国会一直领先B国，而且这个差距很可能是越拉越大（马太效应）。为什么？因为A国和B国都是人类组成的，两国人的智商在统计上看没什么区别。<br>    如果A国和B国保持X领域的交流，那么结果就是：B国会在X领域延伸出一个“接口领域”，这个接口就是和A国的X领域做对接的。比如，把A国的资料翻译成B国文字、参加A国X领域的技术交流等等（比如我国的机械工业出版社就翻译了很多理工科领域的英文经典书籍）。由于接口工作需要时间的投入才能完成，所以B国技术人员中的精英们，会慢慢深入这个接口领域，直接从A国获取X领域的最新知识而不会慢慢等接口的人做完翻译等工作。</p></blockquote><p>我理解上文的接口领域就是层次中的下层对上层提供的接口。</p><p>此外还有一篇文章讲“价值的向上流动”讲的不错，IT行业，未来10年和20年，技术发展方向会是什么？-<a href="https://www.zhihu.com/question/24222456/answer/2276824013">zhihu</a></p><blockquote><ul><li>让我们观察一下计算机领域的发展过程，从一百年前到今天，IT 领域的热点，其实一直在向上移动的，所谓向上移动，是指抽象的层级，而这个过程始终都指向一个目的，就是屏蔽更多的底层细节，让计算机的使用者&#x2F;开发者能够花更多的时间在创造和享受上。<ul><li>我们从打孔机走到了操作系统，再从操作系统走到了容器化，再从容器化走到了云计算，Serverless，操作系统屏蔽了硬件的细节，k8s 屏蔽了物理机的细节，而 Serverless 则更进一步，直接把集群的细节也屏蔽了，而我们可以确定的是，这个过程在能看到的几十年内，还会持续下去，而且会继续加速。 </li><li>当某些关键的问题解决之后，或是某些关键的技术成熟之后，一些问题可能就不再是问题，一些经验也将不再适用，一些技能会被淘汰，一些人会失业，这个过程不会停滞，只会持续下去。 </li><li>如果没有明确的偏好，那就选择正在蓬勃发展的领域，这里有更多的机会，如果有偏好，要仔细想想，这个偏好是不是仅仅因为你更倾向于喜欢自己擅长的所带来的幻觉。</li><li>对技术的发展始终保持乐观态度和想象力，不要只做一个新技术的接受者，要尽可能做一个前瞻者。</li><li>与谁同行，比做什么更重要，尽量多接触喜欢关注前沿技术，倒腾新技术的人，如果他们是你的同事，那再好不过。</li><li>如果每次的新技术出现，都在你的预期之外，那说明你并没有花时间去思考技术的发展趋势和底层逻辑，这对于工程师，是一个危险的信号。</li><li>一切能通过明晰的路径做到的事情，都具备替代性，要想提升自己的不可替代性，最重要的是抓住机会，在关键的产品中，担任关键的位置，取得关键的成果。</li><li>但我们发现，Web 开发的抽象层级，其实是不如游戏开发的，从这两家的产品切入去看，对比就十分明显，虚幻引擎是 “Engine”，而 Vercel 离开发者最近的部分，其实是 Next.js，它仍然是一个 “Framework“ ，如果把抽象层级排个序，大概是这样：语言 -&gt; 库 -&gt; 框架 -&gt; 引擎 </li><li>还有一个我想讨论的是，很多人都担心，更上层的工具，会有自由度的限制，比方说，带 gc 的语言让我们失去了对内存的自由控制，拖拽卡片式编程则很难实现复杂逻辑的编写，看似更高层次的工具是剥夺了生产者的自由度，然而我的观点是，每一次更高层次的工具出现，其实都是让人们生产出了更好的软件，这些更好的软件，你用更底层的工具去做，未必能做出来。</li><li>降低门槛，屏蔽细节，反而让更优秀，更复杂（甚至是性能更高）的软件被生产出来了，一个典型的例子就是，绝大多数工程师用汇编写的代码，还不如用 C 写，然后 gcc 编译出来的代码执行效率高。</li><li>抽象层级的改变，会带来范式的转移，什么是范式？当从原子角度看，桌子，电脑，甚至是芯片都没有意义，因为都是一个一个的原子，而从宏观角度看，我们则可以定义固体，液体，虽然电脑和桌子之间有分子相互传递，可这不影响我们把电脑和桌子看成两个独立的部分，同样道理，你也没办法直接用汇编，去进行声明式，或是响应式的编程。 </li><li>而元宇宙游戏，其实就是游戏平台的 UGC 化，游戏提供非常简易，门槛极低的低代码工具，让很多有创造力的用户，可以创造各种各样的小游戏，我最喜欢玩的 VR 游戏 Rec Room 就是其一，它应该是第一个把游戏引擎做到了 VR 游戏中的游戏，玩家可以直接使用 Maker Pen 在 VR 中完成游戏的创造，包括模型，动画，游戏逻辑：</li></ul></li></ul></blockquote><p>文章的意思也是web引擎会把底层的，比如web语言，库，框架给管道化。</p><h3 id="Intel-and-the-Danger-of-Integration"><a href="#Intel-and-the-Danger-of-Integration" class="headerlink" title="Intel and the Danger of Integration"></a>Intel and the Danger of Integration</h3><p>Stratechery是我非常喜欢看的一个blog网站，基本上每篇都会看。2018年博主发了一片文章，”Intel and the Danger of Integration”-<a href="https://stratechery.com/2018/intel-and-the-danger-of-integration/">stratechery</a> 。看完之后非常有收获。</p><blockquote><p>PCs, long Intel’s chief money-maker, were in decline, leaving the company ever more reliant on the sale of high-end chips to data centers; Intel had effectively zero presence in mobile, the industry’s other major growth area.<br>Intel, meanwhile, was hemmed in by its integrated approach. The first major miss was mobile: instead of simply manufacturing ARM chips for the iPhone the company presumed it could win by leveraging its manufacturing to create a more-efficient x86 chip;<br> The company’s integrated model resulted in incredible margins for years, and every time there was the possibility of a change in approach Intel’s executives chose to keep those margins.</p></blockquote><p>虽然我们都可以看到苹果统一上下游产业链，聚合的好处，但是除去苹果这个例外，事实上尝试做统一上下游产业链的都没有好下场，甚至苹果本身也差点死在这上面。<br>苹果既做硬件又做软件，很难平衡两者的速度。软件做得太快了硬件就跟不上,硬件做得太快了又没有合适的软件可用。<br>吴军在《浪潮之巅》中对摩托罗拉失败的原因做了一些分析。有一个原因就是integration，和Intel失败的原因一样。</p><blockquote><p>德州仪器很像计算机领域的英特尔公司，它自己不做手机，而是向许许多多手机厂商提供核心芯片，它通过其领先的DSP技术，牢牢占据了世界2G高端手机市场的半壁江山。摩托罗拉的战线则拉得很长,从手机芯片到手机整机一条龙。如果内部合作得好,这种做法成本固然低。但是,高尔文不是通用电气的韦尔奇,没有能力整合这么大的公司,其芯片部门和整机部门像两个单独的公司，没有足够的沟通,反而倬得产品开发周期变长。</p></blockquote><p>同时在谈到微软时，吴军也在《浪潮之巅》中写到</p><blockquote><p>苹果拒绝开放麦金托什计算机技术的结果,客观上把所有想从个人电脑市场分一杯羹的兼容机厂商推给了IBM和微软<br>苹果失去地利的一个更深层的原因，是它在某种程度上违反了信息领域的摩尔定律和安迪–比尔定律。整个计算机工业的规模达上万亿美元,绝不是一家公司能吃下的<br>苹果既做硬件又做软件，很难平衡两者的速度。软件做得太快了硬件就跟不上,硬件做得太快了又没有合适的软件可用</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;管道化&quot;&gt;&lt;a href=&quot;#管道化&quot; class=&quot;headerlink&quot; title=&quot;管道化&quot;&gt;&lt;/a&gt;管道化&lt;/h3&gt;&lt;p&gt;最近非常有时间研究了一下”管道化”这个话题。”管道化”就是价值捕获的向上流动。一个比较明显的例子，就是微信把各大运营商给管道化了。&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>为什么游戏会成瘾</title>
    <link href="https://felixgibson.github.io/2022/09/24/2022-09-24/"/>
    <id>https://felixgibson.github.io/2022/09/24/2022-09-24/</id>
    <published>2022-09-24T08:14:00.000Z</published>
    <updated>2023-03-13T23:45:23.422Z</updated>
    
    <content type="html"><![CDATA[<h3 id="为什么游戏会成瘾"><a href="#为什么游戏会成瘾" class="headerlink" title="为什么游戏会成瘾"></a>为什么游戏会成瘾</h3><p>TL; DR<br>游戏本身的variable reward加上家长对孩子游戏的管控，不明确的管控规则，朝令夕改的态度导致游戏成瘾被强化。</p><h2 id="Reason-One-Variable-Reward"><a href="#Reason-One-Variable-Reward" class="headerlink" title="Reason One: Variable Reward."></a>Reason One: Variable Reward.</h2><p>最近在supermemo wiki上看到了一片非常好的文章，讲述了儿童游戏成瘾的原因。原文标题“Reward diversity in preventing addictions-<a href="https://supermemo.guru/wiki/Reward_diversity_in_preventing_addictions">supermemo.guru</a> ” 下面介绍一下文章的主要观点。</p><blockquote><p>Gaming addiction is allegedly caused by <a href="https://supermemo.guru/wiki/Variable_reward" title="Variable reward">variable reward</a>, however, inconsistent parenting can produce a more dangerous variability at a higher level. In the end, it may turn out that a parent is more guilty than a game developer. </p></blockquote><p>游戏成瘾的原因在于variable reward。可变奖励。什么是可变奖励，这牵扯到B. F. Skinner的Operant conditioning-<a href="https://en.wikipedia.org/wiki/Operant_conditioning">wiki</a>。wikipedia中介绍了</p><blockquote><p>As stated earlier in this article, a variable ratio schedule yields reinforcement after the emission of an unpredictable number of responses. This schedule typically generates rapid, persistent responding. Slot machines pay off on a variable ratio schedule, and they produce just this sort of persistent lever-pulling behavior in gamblers. The variable ratio payoff from slot machines and other forms of gambling has often been cited as a factor underlying gambling addiction.  </p></blockquote><p>游戏的奖励是variable ratio的，因此这会导致成瘾行为。</p><h2 id="Reason-Two-Deprive-children’s-Freedom"><a href="#Reason-Two-Deprive-children’s-Freedom" class="headerlink" title="Reason Two: Deprive children’s Freedom"></a>Reason Two: Deprive children’s Freedom</h2><p>还有一个原因是家长的干涉反而导致“罗密欧和朱丽叶效应”</p><blockquote><p>The main risk for developing a <a href="https://supermemo.guru/wiki/Gaming_disorder" title="Gaming disorder">gaming disorder</a> stems largely from the assault on child’s freedoms. In an attempt to control gaming time, parents introduce unclear rules, spark fights, impose restrictions, improvise, confiscate devices, impose penalty chores, etc. The more irrational and unpredictable their behavior, the more the reward of access to gaming become variable reward. In addition, school plays a similar role and adds to the sense of loss of control. This is exactly how variable reward drives gambling at the level above the game itself. The reward is the access to the game, not the tricks that a game developer might have programmed in to keep kids addicted. A healthy brain will saturate. The joy and attraction cannot last for ever. There are other attractions in life. There are other games. There is fatigue. There are many balancing forces that terminate gaming without the fall into addiction (see: <a href="https://supermemo.guru/wiki/Videogames_and_TV_tend_to_saturate" title="Videogames and TV tend to saturate">Videogames and TV tend to saturate</a>).</p></blockquote><h2 id="Reason-Three-Parents’-Unpredictable-Behavior"><a href="#Reason-Three-Parents’-Unpredictable-Behavior" class="headerlink" title="Reason Three: Parents’ Unpredictable Behavior"></a>Reason Three: Parents’ Unpredictable Behavior</h2><p>这一条对Reason Two更近一步，家长除了干涉孩子打游戏的时间，还对规则朝令夕改，家长本身的行为也难以预测，这也成为了另外一种Variable reward或者叫“Variable punishment”。由此游戏的成瘾行为被放大了。</p><h2 id="我的思考"><a href="#我的思考" class="headerlink" title="我的思考"></a>我的思考</h2><p>解决办法第一步应该是是“欲望转移”，即找到其他更加有趣的事情，这样游戏就没有那么有吸引力了。文章中也有提到</p><blockquote><p><a href="https://supermemo.guru/wiki/Diversity" title="Diversity">Diversity</a> of reward is an important defense against the dangers of <strong><a href="https://supermemo.guru/wiki/Variable_reward" title="Variable reward">variable reward</a></strong>. Reward diversity is preventive in depression.</p></blockquote><p>第二步应该是让Operant Conditioning satiating化。Operant Conditioning wikipedia中写到</p><blockquote><p><strong>Satiation&#x2F;Deprivation</strong>: The effectiveness of a positive or “appetitive” stimulus will be reduced if the individual has received enough of that stimulus to satisfy his&#x2F;her appetite. The opposite effect will occur if the individual becomes deprived of that stimulus: the effectiveness of a consequence will then increase. A subject with a full stomach wouldn’t feel as motivated as a hungry one.<a href="https://en.wikipedia.org/wiki/Operant_conditioning#cite_note-Miltenberger84-19">[19]</a></p></blockquote><p>就是稳定的满足，将会降低对游戏的欲望。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;为什么游戏会成瘾&quot;&gt;&lt;a href=&quot;#为什么游戏会成瘾&quot; class=&quot;headerlink&quot; title=&quot;为什么游戏会成瘾&quot;&gt;&lt;/a&gt;为什么游戏会成瘾&lt;/h3&gt;&lt;p&gt;TL; DR&lt;br&gt;游戏本身的variable reward加上家长对孩子游戏的管控，不明确</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>保留足够的资源试错</title>
    <link href="https://felixgibson.github.io/2022/08/27/2022-08-27/"/>
    <id>https://felixgibson.github.io/2022/08/27/2022-08-27/</id>
    <published>2022-08-27T01:10:00.000Z</published>
    <updated>2023-03-13T23:45:23.422Z</updated>
    
    <content type="html"><![CDATA[<h3 id="保留足够的资源试错"><a href="#保留足够的资源试错" class="headerlink" title="保留足够的资源试错"></a>保留足够的资源试错</h3><p>《创新者的窘境》中提到了一个观点，就是新兴企业在不断发展地过程中，可能会频繁地变更方向，因此相较于一开始就“all in”投入巨大的资源去做一个不明朗的项目，更重要地是保留足够的资源，这样，当发现需要变更方向的时候，能够再之后进行第二次或者第三次尝试。</p><blockquote><p>实际上，研究已经表明，绝大多数成功的新兴企业都在开始实施最初的计划，并了解到哪些计划行之有效、哪些只是纸上谈兵时，放弃了最初的商业战略。成功企业与失败企业的主要差别通常并不在于它们最初的战略有多么完美。在初始阶段分析什么是正确的战略，其实并不是取得成功的必要条件，更重要的是保留足够的资源（或是与值得信赖的支持者或投资者建立良好的关系），这样，新业务项目便能在第2次或第3次尝试中找到正确的方向。那些在能够调转航向，转而采用可行的战略之前便用尽了资源或信用度的项目，就是失败的项目。   </p></blockquote><blockquote><p>我将这种发现破坏性技术新兴市场的方法命名为“不可知营销”。根据这种方法进行市场营销，必须遵循这样一个明确的假设，即：没有人——不论是我们，还是我们的客户——能够在真正使用之前了解破坏性产品是否能够投入使用，怎样使用，或者使用量有多大。  </p></blockquote><blockquote><p>人们通常会把他们不了解的事物的风险性放大（不管它们的内在风险到底有多大），并将他们确实了解的事物的风险性缩小（同样不管它们的内在风险到底有多大）  </p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;保留足够的资源试错&quot;&gt;&lt;a href=&quot;#保留足够的资源试错&quot; class=&quot;headerlink&quot; title=&quot;保留足够的资源试错&quot;&gt;&lt;/a&gt;保留足够的资源试错&lt;/h3&gt;&lt;p&gt;《创新者的窘境》中提到了一个观点，就是新兴企业在不断发展地过程中，可能会频繁地变更方</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Be Proactive,The Relaxation Algorithm和最优化</title>
    <link href="https://felixgibson.github.io/2022/07/29/2022-07-29/"/>
    <id>https://felixgibson.github.io/2022/07/29/2022-07-29/</id>
    <published>2022-07-29T14:39:00.000Z</published>
    <updated>2023-03-13T23:45:23.422Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Be-Proactive"><a href="#Be-Proactive" class="headerlink" title="Be Proactive"></a>Be Proactive</h3><p> <em>The 7 Habits of Highly Effective People</em> 中早就提到过”be proactive”的原则，但是今天在吴军的 《态度》 又重温了一遍会有新的感悟，职场确实应该主动去给自己找事干而不是被动等待上级分配事情，这对自己的职业发展无疑是有益的</p><blockquote><p>导师库旦普博士对我说，在接下来的一年里，我要尽可能和公司每个人吃一顿午饭（当时谷歌还很小，做到这一点很容易）。虽然我最后没有做到和每个人吃一顿午饭，但是大致做到了和上百人吃过午饭。因此，我也建议你这样做，它的好处至少有三个。一是可以建立广泛的人脉关系，因为在你未来的职业发展道路上，那些同事可能会帮助你。我在AT&amp;T实习之后，我的导师罗伯托·皮尔切尼博士、平时经常一起聊天的戈登博士对我后来的职业发展提供了非常大的帮助。二是通过和他们交流，了解整家公司乃至整个行业的情况，开阔你的视野。三是可以提升你的软实力。如果你非常忙，没有太多时间和大家一一交流，那么各种团队活动，你都应该积极参加。另外，虽然你是在硅谷地区长大的，但是很多和你一样实习的学生却不是。在工作之余，比如周末，不妨带大家到周围转转，算是你尽到了地主之谊，也方便你结识更多的朋友。</p></blockquote><blockquote><p>我的第一个体会是在工业界要主动工作，这个主动不完全是提前完成任务之后找导师要新任务，它有更深刻的内涵。在学校里，大部分工作都是课程规定的或者老师布置的，只要在最后期限前完成就可以。在公司实习时，你的导师会给你布置一些任务，他也许会给你规定一个期限，但是通常不会给你这样的压力。不过，虽然没有给你规定期限，导师也希望你主动把事情做好。所谓主动，就是指你有自己的想法和规划，并且随时和他进行沟通，得到他甚至其他同事的反馈。尽管公司都会要求实习生的导师像老师一样布置任务，甚至在生活上给你们关心，但是事实上，公司里的工程师或者研究员通常不会像大学教授那样给你布置作业，并且给你细节指导，因为他们通常会忙于自己的工作。因此，你工作的主动性就显得很重要。  </p></blockquote><h3 id="The-Relaxation-Algorithm"><a href="#The-Relaxation-Algorithm" class="headerlink" title="The Relaxation Algorithm"></a>The Relaxation Algorithm</h3><p>最近在读 <em>Algorithms to Live By</em> 这本书，这本书主要是将一些算法应用人生上面。有一章讲到了一个Relaxation的算法，从著名的旅行商问题延伸出来的一个算法，作者做了一个非常有意思的类比，将其类比到人生选择中，个人觉得非常有意思。</p><blockquote><p>Though most of us haven’t encountered the formal algorithmic version of Constraint Relaxation, its basic message is familiar to almost anyone who’s dreamed big about life questions. What would you do if you weren’t afraid? reads a mantra you might have seen in a guidance counselor’s office or heard at a motivational seminar. What would you do if you could not fail? Similarly, when considering questions of profession or career, we ask questions like What would you do if you won the lottery? or, taking a different tack, What would you do if all jobs paid the same? The idea behind such thought exercises is exactly that of Constraint Relaxation: to make the intractable tractable, to make progress in an idealized world that can be ported back to the real one. If you can’t solve the problem in front of you, solve an easier version of it—and then see if that solution offers you a starting point, or a beacon, in the full-blown problem. Maybe it does.  </p></blockquote><blockquote><p>What relaxation cannot do is offer you a guaranteed shortcut to the perfect answer. But computer science can also quantify the tradeoff that relaxation offers between time and solution quality. In many cases, the ratio is dramatic, a no-brainer—for instance, an answer at least half as good as the perfect solution in a quadrillionth of the time. The message is simple but profound: if we’re willing to accept solutions that are close enough, then even some of the hairiest problems around can be tamed with the right techniques.  </p></blockquote><h3 id="最优化"><a href="#最优化" class="headerlink" title="最优化"></a>最优化</h3><blockquote><p>租房与谈恋爱在书中都被归入“最优停止”问题，算法的答案是在37%的时候做选择。细节可以看书。  </p></blockquote><blockquote><p>3：舒普指出，当停车位占用率从90%升至95%时，尽管仅多停了5%的车，但是大家寻找停车位的时间就会翻一番。   </p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Be-Proactive&quot;&gt;&lt;a href=&quot;#Be-Proactive&quot; class=&quot;headerlink&quot; title=&quot;Be Proactive&quot;&gt;&lt;/a&gt;Be Proactive&lt;/h3&gt;&lt;p&gt; &lt;em&gt;The 7 Habits of Highly Ef</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>A Mind for Numbers，破化性技术</title>
    <link href="https://felixgibson.github.io/2022/07/24/2022-07-24/"/>
    <id>https://felixgibson.github.io/2022/07/24/2022-07-24/</id>
    <published>2022-07-24T08:52:00.000Z</published>
    <updated>2023-03-13T23:45:23.422Z</updated>
    
    <content type="html"><![CDATA[<h3 id="A-Mind-for-Numbers"><a href="#A-Mind-for-Numbers" class="headerlink" title="A Mind for Numbers"></a>A Mind for Numbers</h3><p>困难的事情优先。《A Mind for Numbers》中提到了困难的事情优先，然后遇到阻碍切换到容易的事情。这个方法可以类比计算机的时间片调度，当遇到IO等情况，可以切换为其他进程。</p><blockquote><p>Then when you start working problems, start first with what appears to be the hardest one. But steel yourself to pull away within the first minute or two if you get stuck or get a sense that you might not be on the right track.<br>In some sense, with this approach to test taking, you’re being like an efficient chef. While you’re waiting for a steak to fry, you can swiftly slice the tomato garnish, then turn to season the soup, and then stir the sizzling onions. The hard-start–jump-to-easy technique may make more efficient use of your brain by allowing ﻿different parts of the brain to work simultaneously on different thoughts.  </p></blockquote><h3 id="破坏性技术"><a href="#破坏性技术" class="headerlink" title="破坏性技术"></a>破坏性技术</h3><p>《创新者的窘境》中提到的破坏性技术让我印象深刻。<br>企业如果想要发展破坏性技术，那么第一点就是应该不要密切关注用户。</p><blockquote><p>第一，市场要求的或者能够消化的发展速度，可能会与技术能够达到的发展速度存在差异。这就意味着，今天似乎对客户来说不太有实用价值的产品（即破坏性技术）日后可能足以满足他们的需求。认识到这种可能性，我们就不能指望客户会引导我们发展他们当前并不需要的创新。因此，尽管密切关注我们的客户是应对延续性创新的一个重要管理范式，但它可能会在我们应对破坏性创新时给我们提供具有误导性的数据。   </p></blockquote><p>如果一个技术想要成为破坏性技术，那么它必须最终的性能要达到主流市场所需求的水准。当下可能的破坏性技术有Web3, VR&#x2F;AR，云游戏等，推测Web3底层公链的TPS必须达到PayPal甚至超过PayPal多个数量级才能承载Web3 dApp的广泛使用，在此之前dApp应该会在一个独特的价值网络中慢慢发展。</p><blockquote><p>要回答这些问题，我需要绘制一张市场所要求的性能改善轨线，并将其与技术能够提供的性能改善轨线进行比较；  </p></blockquote><blockquote><p>但这一信息并不足以说明电动汽车具有破坏性产品的特性，只有在我们发现其性能改善曲线在日后有可能会与主流市场的需求相交汇时，我们才能说电动汽车是一种破坏性产品。为了评估这种可能性，我们需要绘制轨线，并将市场要求的性能改善轨线，与电动汽车技术可能提供的性能改善轨线进行比较。如果这两条轨线是平行的，那么电动汽车就不太可能成为主流市场上的一分子；但如果电动汽车技术的发展速度快于市场要求的性能改善速度，那么这种技术就真的会给市场带来破坏性威胁。  </p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;A-Mind-for-Numbers&quot;&gt;&lt;a href=&quot;#A-Mind-for-Numbers&quot; class=&quot;headerlink&quot; title=&quot;A Mind for Numbers&quot;&gt;&lt;/a&gt;A Mind for Numbers&lt;/h3&gt;&lt;p&gt;困难的事情优</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>How to reduce overconfidence和广度vs深度</title>
    <link href="https://felixgibson.github.io/2022/07/16/2022-07-16/"/>
    <id>https://felixgibson.github.io/2022/07/16/2022-07-16/</id>
    <published>2022-07-16T08:16:00.000Z</published>
    <updated>2023-03-13T23:45:23.422Z</updated>
    
    <content type="html"><![CDATA[<h3 id="How-to-reduce-overconfidence"><a href="#How-to-reduce-overconfidence" class="headerlink" title="How to reduce overconfidence"></a>How to reduce overconfidence</h3><p>《社会心理学》中提到了两个克服overconfidence的方法，其中一个是prompt feedback。立刻反馈，另一个是思考为什么自己可能是错的。</p><blockquote><p>Two techniques have successfully reduced the overconfidence bias. One is prompt feedback (Koriat et al., 1980). In everyday life, weather forecasters and those who set the odds in horse racing both receive clear, daily feedback. Perhaps as a result, experts in both groups do quite well at estimating their probable accuracy.<br>When people think about why an idea might be true, it begins to seem true (Koehler, 1991). Thus, a second way to reduce overconfidence is to get people to think of one good reason why their judgments might be wrong; that is, force them to consider disconfirming information (Koriat et al., 1980). Managers might foster more realistic judgments by insisting that all proposals and recommendations include reasons why they might not work.</p></blockquote><h3 id="广度和深度"><a href="#广度和深度" class="headerlink" title="广度和深度"></a>广度和深度</h3><p>《Range》这本书提到了广度比深度更好的观点。结合书评：一万个小时，够么？-<a href="https://m.douban.com/book/review/10306362/">m.douban</a> 。</p><blockquote><p>作者提出的观点是：一万小时理论很有价值，但是有适用的场合限定，更多的时候，我们需要的是广度<br>第一类场景的特点：面临的问题是一个相对明确清晰的规则，并且有明确的客观的评价体系，比如高尔夫，某种程度上是一个自己和自己的比赛，规则也无比的清晰——最少的次数把球打进洞，作者认为这一类问题是最适用一万小时理论的，也就是在确定的规则下把技能打磨到极致<br>第二类场景的特点：问题的本身并没有完全清晰的确定，或者说问题本身的刻画就是解决问题的关键，由于影响因素的复杂(比如研究国际形势问题的专家)、多方参与的互动带来的复杂性(比如篮球运动员在场上的决策是需要相机抉择)，这一类问题的解决，深度很重要，但是只有深度是不够的，还需要广度(Range)<br>而我们生活中面临的场景，第二类要显著多于第一类，到底为什么广度对解决问题如此重要呢？作者总结了这么几个原因：</p><ol><li>我们需要外部思维来激发解决问题的思路</li><li>我们需要足够的样本(Sampling)来达成最佳的匹配<br>所以我们需要宽度(Range) ，因为我们需要通过完成这个探索过程来确定真正适合自己的方向，没有谁的人生是一锤子买卖，不断保持这种宽度，会让我们始终保持着寻找更加匹配方向的可能性</li><li>对深度的过分僵化追求在某些时候会阻碍我们解决问题<br>作者认为对于深度，我们整个社会都极其推崇，那种追求极致的导向，但是从另外一方面，我们应当根据具体的情况作出具体的选择，没有谁规定人生一定要沿着起点的路线一直走下去，因为我们在一开始作出的判断和选择往往会随着更多信息的获得和情况的改变，而变得已经不合时宜，这时候我们应该学会坦然的接受除了坚持和毅力，还有广度和调整<br>总得来说我们的人生是一个不断选择的过程，这个过程中需要解决各种各样的问题，即使你把某一个领域作为自己一生奋斗的目标，也可以从很多其他的领域获得输入，你永远也不知道不同领域的知识摩擦会带来怎样的火花。<br>对于我们大多数人来说，应该有一个更加开放的心态，我们的人生并非注定一定要在一条路上走下去，在恰当的时间做出最有利的决定才是最重要的，这个决定可能是坚持，也可能是改变</li></ol></blockquote><h3 id="好奇心"><a href="#好奇心" class="headerlink" title="好奇心"></a>好奇心</h3><p>《掌控习惯》附录中作者提到了一个观点，就是时刻保持好奇心。只有好奇才会产生欲望。因此最重要的是去承认自己的无知，时刻保持对这个世界的好奇心。</p><blockquote><p>意识先于欲望。当你赋予提示一定意义之后，就会产生渴求。你的大脑会构造一种情绪或感觉来描述你的现状，这意味着渴求只会产生于你发现了机会之后<br>  幸福即无欲。当你观察到提示，但不想改变你的现状时，说明你安于现状。幸福无关获得快乐（乐趣或满足），而是事关欲望缺失。当你没有体验不同感受的冲动时，幸福就会到来。<br>  渴望是想有所作为。观察未引发渴望说明你没有意识到需要有任何作为。你的欲望没有泛滥，你不渴望改变现状，你的头脑不会构想出问题让你去解决，你只是在观察着，无动于衷。<br>&#x3D;&#x3D;好奇心总比头脑灵活好。积极性和好奇心比头脑灵活更重要&#x3D;&#x3D;，因为前者会导致行动。头脑灵活永远不会独自产生结果，因为它不会让你采取行动。促使行为的是欲望，而不是智力。   </p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;How-to-reduce-overconfidence&quot;&gt;&lt;a href=&quot;#How-to-reduce-overconfidence&quot; class=&quot;headerlink&quot; title=&quot;How to reduce overconfidence&quot;&gt;&lt;/a&gt;Ho</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>团结大多数人,开源当以上游优先和如何打造真正的简历</title>
    <link href="https://felixgibson.github.io/2022/07/09/2022-07-09/"/>
    <id>https://felixgibson.github.io/2022/07/09/2022-07-09/</id>
    <published>2022-07-09T05:01:00.000Z</published>
    <updated>2023-03-13T23:45:23.422Z</updated>
    
    <content type="html"><![CDATA[<h3 id="团结大多数人"><a href="#团结大多数人" class="headerlink" title="团结大多数人"></a>团结大多数人</h3><p>吴军在《态度》书中，提到了不要孤立自己的观点。有些同事，可能不喜欢他们，但是他们能力很强，能够和他们好好相处，是一个比较重要的能力。</p><blockquote><p>我们可以根据能力，以及管理的难易程度，把世界上的人分成4种。第一种人和我们关系非常好，做事总能配合我们，而且能力很强。这种人，我们非常放心。第二种人具有第一种人的特点，但能力有限，这种人我最后再谈。第三种人有做事的能力，但他们未必是你的朋友，你们很难相处融洽。如果他是你的下属，未必会听话。如果他是你的上司，未必对你很公平。这种人非常多，这是我要谈的重点。第四种人在上面两个维度都有些问题，他们和我们的交集通常不多，也就不必太在意。因此，在为人处世方面，我们需要比较留意的是第二种人和第三种人。<br>世界上有很多人，他们既聪明，又能干，却未必让我们喜欢。对于他们，我们要有一个非常公允的态度，不能因为他们和我们不同，或者有某些缺陷，就否认他们的能力，进而否认他们的贡献。<br>塔列朗这样的人，按照中国过去的标准判断，是所谓的能吏，就是办事能力很强，道德未必高尚的人。在现实生活中，我们周围很多人对我们来说就像塔列朗一样。他们不可能和我们非常亲近，但是当我们和他们利益一致时，他们是很好的伙伴，他们专业能力强，而且忠于职守。即便在很多观点上和我们不一致，也能尽职尽责地把事情做好。你今后在工作中的同事，可能很多是属于塔列朗这样的人。和他们处好关系，是能够完成一项伟大事业的前提条件。<br>很多人对人对事的判断完全根据自己的喜好：符合自己喜好的人，无论他们做什么都觉得好；不符合自己喜好的人，无论他们做什么都要挑毛病。这种待人接物的态度不好。大部分人对我们来说不会有恶意，而我们也不能有洁癖，对别人横挑鼻子竖挑眼。我们要看到别人的长处，并且善用他们的长处。在工作中，最蠢的办法就是把塔列朗这样的人推到我们的对立面。事实上，只要大家能设定一个共同目标，把彼此的利益绑在一起，遇到矛盾，对事不对人，就能团结大多数人，把我们的事情做好。  </p></blockquote><h3 id="开源当以上游优先"><a href="#开源当以上游优先" class="headerlink" title="开源当以上游优先"></a>开源当以上游优先</h3><p>最近读到一篇文章：开源当以上游优先-<a href="https://xuanwo.io/reports/2022-25/">xuanwo.io</a> 。比较有道理。</p><blockquote><p>采用上游优先则能够帮助减少我们内部魔改后无法跟进社区更新带来的维护负担和负资产。<br>参与开源项目的贡献是维护自己利益的最佳方式。开源项目不同于公司内部项目，其决策受到开源共同体的整体利益驱动。不参与到开源贡献中就缺乏对项目发展方向的影响力，进而导致自己已有投资的全盘落空。 </p></blockquote><h3 id="如何打造真正的简历"><a href="#如何打造真正的简历" class="headerlink" title="如何打造真正的简历"></a>如何打造真正的简历</h3><p>geekplux在 “如何打造真正的简历”-<a href="https://geekplux.com/posts/true-resume">geekplux</a> 中提到了：</p><blockquote><p>我参加过面试，也面试过别人，见过的简历大概分三种，除基本信息外：  </p><ol><li>只罗列技能。这种简历的信息量为 0，你不会这些技能怎么会来投递这个职位。</li><li>罗列出辉煌的“成绩”、项目。看似丰满，但我无法确定你在其中具体做了些什么。</li><li>详细描述自己在各个项目的作用。这种简历我认为最好，但由于我对项目缺乏感知，所以得进一步了解你。</li></ol></blockquote><p>建立影响力，也是一种简历，而且往往更加有效。建立影响力的方式包括，个人主页，blog，项目等等。同时这也是一个增加”Lucky Surface”的过程。就像程序员的喵在”<a href="https://catcoding.me/p/weekly-1/">你可以创造运气</a>“中提到的”Lucky Surface Area”。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;团结大多数人&quot;&gt;&lt;a href=&quot;#团结大多数人&quot; class=&quot;headerlink&quot; title=&quot;团结大多数人&quot;&gt;&lt;/a&gt;团结大多数人&lt;/h3&gt;&lt;p&gt;吴军在《态度》书中，提到了不要孤立自己的观点。有些同事，可能不喜欢他们，但是他们能力很强，能够和他们好好相处</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>创新,行为陷阱和创新者的窘境</title>
    <link href="https://felixgibson.github.io/2022/07/03/2022-07-03/"/>
    <id>https://felixgibson.github.io/2022/07/03/2022-07-03/</id>
    <published>2022-07-03T02:28:00.000Z</published>
    <updated>2023-03-13T23:45:23.422Z</updated>
    
    <content type="html"><![CDATA[<p>分享最近一周读的书里面的一些观点。</p><h3 id="创新"><a href="#创新" class="headerlink" title="创新"></a>创新</h3><p>jamesclear(Atomic Habits的作者)，在《How Innovative Ideas Arise-<a href="https://jamesclear.com/dont-start-from-scratch">jamesclear</a>  》中提到了一个关于创新如何产生的方法：Innovative thinkers don’t create, they connect. 这个观点很有意思  </p><blockquote><p>The most creative innovations are often new combinations of old ideas. Innovative thinkers don’t create, they connect. Furthermore, the most effective way to make progress is usually by making 1 percent improvements to what already works rather than breaking down the whole system and starting over.   </p></blockquote><p>吴军老师在《见识》这本书中，也提到了类似的观点：</p><blockquote><p>那些被认为是硅谷用来改变了世界的科技产品或者发明，其实绝大部分最初都不是源于硅谷地区的。<br>今天，不少人也把颠覆现有行业放在嘴边，但是真正实现了颠覆的人很少，反而山寨的人却很多，这又是为什么呢？因为叛逆者们颠覆现有秩序不是一件容易的事情，要想改变世界，需要有常人所没有的执着。桂谷的叛逆者们为了达到目的，首先会想尽办法去寻找那些可能颠覆现有产业的技术（注意：是寻找而不是发明)，这样，那些在其他地区被发明却又被束之高阁的技术，就被硅谷的颠覆者带到硅谷继续发扬光大。在前一节中我讲到过，新技术常常不可靠，时灵时不灵，要将这样的技术转变成产品，需要有足够的耐心和智慧，克服一个又一个困难，走完从1到N的漫长路程。<br>初创小公司要想和大公司竞争’就不能完全按照大公司制定的市场规则来运作，因为那样的胜算很低，所以它们常常需要打擦边球，颠覆现有的市场。当然，这并不是一件容易的事情，既需要有新的技术和产品，也需要站在巨人的肩膀上实现一个质的飞跃。我常常把这种创新叫作“N+1”，即在原来的基础上更进一步。</p></blockquote><h3 id="行为陷阱"><a href="#行为陷阱" class="headerlink" title="行为陷阱"></a>行为陷阱</h3><p>《决策与判断》中提到了五个行为陷阱，分别是延期陷阱，无知陷阱，投入陷阱，恶化陷阱，集体陷阱。其中减弱或者避免投入陷阱的方法，可以是：</p><blockquote><p>在做出一个承诺之前“把结束的成本明确化”  </p></blockquote><h3 id="创新者的窘境"><a href="#创新者的窘境" class="headerlink" title="创新者的窘境"></a>创新者的窘境</h3><p>《创新者的窘境》中，有一个观点很有意思。</p><blockquote><p>当我们理解了决定世界运作方式的物理和心理法则，然后学会了尊重或遵循这些法则时，我们就能够最有效地激发我们的潜能。这个观点当然不是本书的首创。有这样一个小笑话，斯坦福大学的罗伯特·伯格尔曼教授（本书大量引用了他的著作）有一次在授课时不小心把钢笔掉在了地上。他蹲下去捡笔时嘴里还喃喃自语：“我讨厌重力。”然后，他走回黑板准备重新回到原来的思路上来，这时他又接着说：“但你们知道吗？重力可不管你喜不喜欢！它永远会产生向下的吸引力，而且我也可能因此而跌倒。”  </p></blockquote><p>作者在这里指的意思是，既然成熟公司会忽视破坏性技术，这就像重力，如果非要在成熟公司内部推广破坏性技术，阻力很大，因此不如成立一个单独的公司发展破坏性技术，然后原公司持股，原公司和新公司得尽量独立。但是，这样也会有一些问题，比如新公司想要摆脱原公司的控制怎么办，这也是需要考虑到的，不过这应该是发展破坏性技术最好的方式了。 </p><h3 id="Think-Again"><a href="#Think-Again" class="headerlink" title="Think Again"></a>Think Again</h3><p>《Think Again》中提到了“a bit of knowledge can be dangerous”</p><blockquote><p>It’s when we progress from novice to amateur that we become overconfident. A bit of knowledge can be a dangerous thing. In too many domains of our lives, we never gain enough expertise to question our opinions or discover what we don’t know. We have just enough information to feel self-assured about making pronouncements and passing judgment, failing to realize that we’ve climbed to the top of Mount Stupid without making it over to the other side.  </p></blockquote><h3 id="描述性决策模型"><a href="#描述性决策模型" class="headerlink" title="描述性决策模型"></a>描述性决策模型</h3><p>《决策与判断》中提到了人们实际决策会采用的描述性决策模型。比如，注重损失，过余注重小概率事件忽视基数值。</p><blockquote><p>损失额价值函数比收益的价值函数更为陡峭，所以损失比收益显得更加突出一些。<br>由于价值函数呈“S”形，人们在面对收益时常常是规避风险的，而在面临损失时则常常偏好风险<br>决策权重常常会强调小概率事件而忽视一般或者高概率事件  </p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;分享最近一周读的书里面的一些观点。&lt;/p&gt;
&lt;h3 id=&quot;创新&quot;&gt;&lt;a href=&quot;#创新&quot; class=&quot;headerlink&quot; title=&quot;创新&quot;&gt;&lt;/a&gt;创新&lt;/h3&gt;&lt;p&gt;jamesclear(Atomic Habits的作者)，在《How Innovative</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>从Anki到Obsidian，我的Spaced Repetition经历</title>
    <link href="https://felixgibson.github.io/2022/07/03/%E6%88%91%E4%BD%BF%E7%94%A8%E2%80%9C%E9%97%B4%E9%9A%94%E9%87%8D%E5%A4%8D%E2%80%9D%E7%9A%84%E7%BB%8F%E5%8E%86/"/>
    <id>https://felixgibson.github.io/2022/07/03/%E6%88%91%E4%BD%BF%E7%94%A8%E2%80%9C%E9%97%B4%E9%9A%94%E9%87%8D%E5%A4%8D%E2%80%9D%E7%9A%84%E7%BB%8F%E5%8E%86/</id>
    <published>2022-07-03T02:28:00.000Z</published>
    <updated>2023-03-13T23:45:23.422Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Spaced-Repetition定义和作用"><a href="#Spaced-Repetition定义和作用" class="headerlink" title="Spaced Repetition定义和作用"></a>Spaced Repetition定义和作用</h2><p>间隔重复，英文叫做”Spaced Repetition”，关于它的定义，可看Spaced repetition-<a href="https://en.wikipedia.org/wiki/Spaced_repetition">en.wikipedia.org</a> 。<br>就我半年的使用来看，Spaced Repetition有多个好处：</p><ol><li>能够回顾知识：很多时候，自己都是在犯过去同样的错误，通过Spaced Repetition，相当于加了一个超级强大的memo，就像是动态规划算法，一但做过某个东西，下一次就可以直接拿来用。</li><li>减少选择：很多时候，我们会面临选择的困境，我们的选择太多会让“选择”这个过程就花费很多时间。Spaced Repetition，减少了选择，你只需要不断地复习就行了。至于复习哪些内容，算法都帮你解决了。其实，抖音这类app，也是利用了这个特点，减少了用户的选择。</li><li>孤立语义，避免illusion of competence: 我在之前的<a href="https://felixgibson.github.io/2022/06/05/2022-06-04/">博客</a>中提到了<blockquote><p>many students experience illusions of competence when they are studying. “repeatedly read their notes or textbook(despite the limited benefits of this strategy), but relatively few engage in self-testing or retrieval practice while studying”</p></blockquote><p> 很多人不断重复阅读书籍，以为自己什么都会了，但是一考试，却发现实际上还是有很多空缺。这是因为我们对书籍的整体太熟悉造成。要打破这种熟悉，增加单个知识点的连接，就需要孤立每一个知识点，这个可以通过Spaced Repetition做到</p></li></ol><h2 id="从Anki到Obsidian，我的Spaced-Repetition经历"><a href="#从Anki到Obsidian，我的Spaced-Repetition经历" class="headerlink" title="从Anki到Obsidian，我的Spaced Repetition经历"></a>从Anki到Obsidian，我的Spaced Repetition经历</h2><p>第一次接触到Spaced Repetition是通过Anki，用了一段时间，发现制作卡片和回顾卡片都太独立，没法整合到笔记系统中。</p><p>后面把笔记系统从onenote切换到了logseq，发现logseq自带的flashcards就是anki的便捷版本，随后就开始在logseq上制作卡片，然后回顾卡片。但是在这个过程中，发现一些Logseq的问题，</p><ol><li>比如性能堪忧。当我制作了500+卡片时，已经很卡顿了。</li><li>功能不全面，有bug。比如flashcard不具备根据card-next-schedule进行排序的功能，由此我还专门提了一个<a href="https://github.com/logseq/logseq/pull/4864">PR给Logseq官方</a>，但是最终还是放弃了。</li></ol><p>最后把笔记从Logseq迁移到Obsidian，无意间发现<a href="https://github.com/st3v3nmw/obsidian-spaced-repetition">obsidian-spaced-repetition</a>这个插件，但是用了一段时间后，发现这个插件有一些功能不满足我的需求，比如制作卡片不灵活，它的”?”符号必须在行首且没有空格。不支持tag 重新排序。等等。</p><p>最后，自己fork了一个分支，维护了起来。由于和原仓库改动较大，就没有提PR了。目前当作自己在用，而且README更新较慢。。<br><a href="https://github.com/FelixGibson/obsidian-spaced-repetition">自己fork的分支的链接</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>Spaced Repetition适合那些需要一生记忆的知识，对我来说，它能够极大地提高我的效率。希望大家读完本文章都能有所收获，找到自己合适的学习方式。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Spaced-Repetition定义和作用&quot;&gt;&lt;a href=&quot;#Spaced-Repetition定义和作用&quot; class=&quot;headerlink&quot; title=&quot;Spaced Repetition定义和作用&quot;&gt;&lt;/a&gt;Spaced Repetition定义和</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>需求并没有凭空产生,Give and Take和心理分账</title>
    <link href="https://felixgibson.github.io/2022/06/23/2022-06-23/"/>
    <id>https://felixgibson.github.io/2022/06/23/2022-06-23/</id>
    <published>2022-06-23T06:46:00.000Z</published>
    <updated>2023-03-13T23:45:23.422Z</updated>
    
    <content type="html"><![CDATA[<h3 id="需求并没有凭空产生"><a href="#需求并没有凭空产生" class="headerlink" title="需求并没有凭空产生"></a>需求并没有凭空产生</h3><p>《见识》里面提到一个观点：</p><blockquote><p>谷歌从事的是过去电视行业的视频传播和广告业，同时取代了微软在操作系统中的地位；亚马逊取代的是沃尔玛零售业以及 IBM 的企业级 IT 服务业务；至于 Facebook，则是一个将人联系起来的社交场所。要知道在互联网出现之前，美国中学生放学后平均每天通 两个小时的电话，和今天玩儿微信或者 Facebook 的时间差不多。也就是说，中学生们的社交依然在那里， 只是形态改变了而已。  </p></blockquote><h3 id="Give-and-Take"><a href="#Give-and-Take" class="headerlink" title="Give and Take"></a>Give and Take</h3><p>《Give and Take》这本书中，提到了作为Giver比Taker更好，因为生活并不是零和游戏。</p><blockquote><p>在纯粹的零和游戏中，付出很少能带来回报。但是，在大部分情况下，生活并不是一场零和游戏，那些将付出作为主要交互风格的人，最终还是能获得回报。付出者需要一些时间，才能得到别人的善意和信任，但是他们积累的名声和人际关系，最终会帮助他们走向成功。 </p></blockquote><h3 id="心理分账"><a href="#心理分账" class="headerlink" title="心理分账"></a>心理分账</h3><p>《决策与判断》这本书中，提到了一个”心理分账”的概念，比较有意思，还有就是人们是根据“比率-差异原则”来做选择的，两个金额之间的固定（正）差额的影响随着它们之间比率的增加而增加。如何减少“比率-差异原则”？小钱不要省，大钱要谨慎。</p><blockquote><p>心理分账（psychological accounting）是指，某一结果只是从动作直接结果的角度来描述（特韦尔斯基和卡尼曼称之为“简单账户”），还是需要综合考虑这一动作与其他行为的先前关系（特韦尔斯基和卡尼曼称之为“综合账户”inclusive account）。<br>人们是根据“比率-差异原则”来做选择的，两个金额之间的固定（正）差额的影响随着它们之间比率的增加而增加。20美元与15美元的比率为1.33，这当然比125美元与120美元的比率1.04更有影响力。理查德·塞勒（Richard Thaler， 1985）在研究心理分账在消费选择中扮演的角色时也发现了类似的框架效应。  </p></blockquote><h3 id="对随机性的知觉"><a href="#对随机性的知觉" class="headerlink" title="对随机性的知觉"></a>对随机性的知觉</h3><p>《决策与判断》提到了人们倾向于从随机序列中发现一定的模式。如果事件都是独立的，那么应该避免将短期重复看作是有意义的。</p><blockquote><p>我们很容易从一个随机序列中发现一定的模式。在目睹了三至四次相同的结果以后，绝大多数个体就可以得出结论，这个序列中必定存在一定的模式。当然，如果特定的结果在现实生活中并不是经常发生的，三到四次相同事件的发生确实具有一定的信息性（例如，很少进行人员调整的公司在很短时间内发生了三次人员调整）。但是如果情境都是由独立事件组成，且结果相同，那么三到四次相同结果的发生并不是不寻常的，决策者应该尽量避免将相同结果的短期重复看做是有意义的。  </p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;需求并没有凭空产生&quot;&gt;&lt;a href=&quot;#需求并没有凭空产生&quot; class=&quot;headerlink&quot; title=&quot;需求并没有凭空产生&quot;&gt;&lt;/a&gt;需求并没有凭空产生&lt;/h3&gt;&lt;p&gt;《见识》里面提到一个观点：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;谷歌从事的是过去</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>自我实现预言,“延续性技术”和“破坏性技术”和数量的游戏</title>
    <link href="https://felixgibson.github.io/2022/06/18/2022-06-18/"/>
    <id>https://felixgibson.github.io/2022/06/18/2022-06-18/</id>
    <published>2022-06-18T01:42:00.000Z</published>
    <updated>2023-03-13T23:45:23.422Z</updated>
    
    <content type="html"><![CDATA[<h3 id="自我实现预言"><a href="#自我实现预言" class="headerlink" title="自我实现预言"></a>自我实现预言</h3><p>《决策与判断》这本书提供一些方法来避免自我实现预言的产生。包括1.关注动机因素，2.证伪方式回答问题，3.思考自己的判断在哪些情况下可能是错误的。同样，这些三个方法我认为也适合用来避免过度自信。</p><blockquote><p>避免证实偏好和自我实现的预言：<br>1.关注动机因素<br>2.鼓励用证伪性回答的方式来组织问题<br>3.思考自己的判断在哪些情况下可能是错误的  </p></blockquote><h3 id="“延续性技术”和“破坏性技术”"><a href="#“延续性技术”和“破坏性技术”" class="headerlink" title="“延续性技术”和“破坏性技术”"></a>“延续性技术”和“破坏性技术”</h3><p>《创新者的窘境》中提到了延续性技术和破坏性技术这两个概念。我认为这能够在一定程度上解释5G为什么是一个“骗局”，而电动汽车却能够发展起来。因为5G是属于“延续性技术”，而电动汽车则属于破坏性技术，加上电动汽车属于国家战略，因此在双Buff叠加的情况下，电动汽车能够大力发展，消费者也能够买账。</p><blockquote><p>大多数新技术都会推动产品性能的改善，我将这些技术称为“延续性技术”。一些延续性技术可能不具有连续性，或者在本质上具有突破性，而其他一些则在本质上属于渐进式技术。所有的延续性技术所具有的共同点就是，它们都是根据主要市场的主流客户一直以来所看重的性能层面，来提高成熟产品的性能。特定行业的大多数技术进步从本质上说都具有延续性。本书所揭示的一项重要发现就是，即使是最具突破性、最复杂的延续性技术，也很少会导致领先企业失败。<br>破坏性技术给市场带来了与以往截然不同的价值主张。一般来说，破坏性技术产品的性能要低于主流市场的成熟产品，但它们拥有一些边缘客户（通常也是新客户）所看重的其他特性。基于破坏性技术的产品通常价格更低、性能更简单、体积更小，而且通常更便于客户使用。除上文提到的台式个人电脑和折扣零售的例子外，这方面还有许多例子。相对于哈雷–戴维森公司（简称哈雷公司）和宝马公司制造的大马力公路摩托车，本田公司、川崎公司和雅马哈公司在北美和欧洲推出的小型越野摩托车算得上是一种破坏性技术；晶体管相对于真空管是一种破坏性技术；保健机构相对于传统的医疗保险商也是一种破坏性技术。在不远的未来，相对于个人电脑硬件和软件供应商，“互联网工具”可能也会成为一种破坏性技术。</p></blockquote><h3 id="解决抑郁的方法"><a href="#解决抑郁的方法" class="headerlink" title="解决抑郁的方法"></a>解决抑郁的方法</h3><p>《情商》这本书对抑郁提供了一些方法，个人认为社交和有氧运动最为有效。</p><blockquote><p>社交。比如外出就餐、打球或看电影等，总之是和朋友或家人一起从事某项活动。需要注意的是不要选择诸如催泪电影、悲情小说等会让情绪再次低落的东西。<br>转移注意力。如激烈的体育赛事、滑稽的电影以及鼓舞人心的图书。<br>有氧运动。这是摆脱轻度抑郁以及其他消极情绪最有效的方法，尤其是对很少外出活动的人最为有效。<br>享受。通过享受或感官愉悦使自己高兴起来是消除抑郁的另一种流行方法。如洗热水澡、吃喜爱的食物、听音乐或逛街。<br>换个角度思考问题。用不同的眼光看待使人产生抑郁的事情或问题，并以更加积极的态度坦然面对。<br>帮助他人。抑郁起源于对自身的沉思和关注，因此如果我们对他人的痛苦感同身受，对他人伸出援助之手，将会使我们摆脱对自身的痴迷。<br>宗教。最后，有些人还可以求助于超然的力量，从悲伤情绪中解脱出来。比如宗教祈祷。</p></blockquote><h3 id="局部创新"><a href="#局部创新" class="headerlink" title="局部创新"></a>局部创新</h3><p>《The Ambiguities of Experience》(《经验的疆界》)中对局部创新做了一定解释，个人认为很有道理。创新不是无源之水，需要多去增长见识，避免井底之蛙。</p><blockquote><p>局部创新的一个主要特征就是创新者孤陋寡闻。与初做学问的人相比，经验丰富的学者不大可能宣称自己的东西是原创的  </p></blockquote><h3 id="不要寄希望于技术突破"><a href="#不要寄希望于技术突破" class="headerlink" title="不要寄希望于技术突破"></a>不要寄希望于技术突破</h3><p>《浪潮之巅》提到了一个观点，就是很多时候，并不需要等待技术突破才能去做应用。比如特斯拉，特斯拉优势的地方，并不是它设计了更高效率的电池，而是它将已有的电池以一种更加高效的方式整合，包括火箭也是这样，集成火箭，就是将小火箭合到一起，并没有更高的创新。有些时候，创新并不是来自更底层。同时可以联想到GAI，GAI必然不需要硬件层面的突破和创新，只需要软件甚至更高层的应用层软件的创新就可以了。</p><blockquote><p>和前三次工业革命类似，在智能时代并不需要所有企业都去开发智能技术–它们只要用好智能技术，把自己原有的产业做好就可以了。有一点肯定，核心技术的竞争在自动驾驶本身，而不是在大家都要使用的人工智能芯片，以及机器学习算法上。事实上今天绝大部分自动驾驶汽车都采用英伟达的人工智能芯片，以及通用的机器学习算法。如果这个领域里哪家公司将中心放到了研制处理器，或者试图改进基础的机器学习算法，那就走错了路。   </p></blockquote><h3 id="运气和练习"><a href="#运气和练习" class="headerlink" title="运气和练习"></a>运气和练习</h3><p>《决策与判断》中“相关和因果”章节做了一些有趣的研究。一个随机游戏，但是被试还是认为练习和分心会影响成绩，投掷骰子也是这样，我们倾向于认为轻轻地投掷和很重地投掷会影响结果，实际上并不是这样。</p><blockquote><p>大约40％的被试认为练习能够提高他们预测的成绩，25％的被试认为分心会影响他们预测的成绩—即使任务是预测一个偶然事件。这样的研究结果与赌博者投掷骰子的情形是类似的，他们如果想得到较小的数字，他们就会很轻柔地投掷；而如果想得到较大的数字，他们就会很重地投掷。  </p></blockquote><h3 id="数量的游戏"><a href="#数量的游戏" class="headerlink" title="数量的游戏"></a>数量的游戏</h3><p>《“错误”的行为》一书中提到了一个观点，就是我们在小事上经常做，导致我们能够做好它，但是由于择偶，房子，职业等大事我们并不经常做，导致我们并没有那么多学习的机会。所以说，反复练习才是王道。</p><blockquote><p>心理学家告诉我们，要想从经验中有所收获，就必须做两件事：反复练习和及时反馈。当这两个条件具备时，比如我们学骑自行车或开车时，我们会不断学习，当然有时也会发生事故。不过，生活中很多问题都不会给我们这些学习机会，这就引出了一个有趣的问题：从某种角度上说，学习和激励这两点是相互矛盾的。把选择频率不同的对象从左向右排列：午餐、牛奶、面包、衣服、汽车、房子、职业、配偶。小事要经常做，所以人们能够学习如何做好它，但房子、工作、配偶、养老保险选择上，我们就没有那么多学习的机会。  </p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;自我实现预言&quot;&gt;&lt;a href=&quot;#自我实现预言&quot; class=&quot;headerlink&quot; title=&quot;自我实现预言&quot;&gt;&lt;/a&gt;自我实现预言&lt;/h3&gt;&lt;p&gt;《决策与判断》这本书提供一些方法来避免自我实现预言的产生。包括1.关注动机因素，2.证伪方式回答问题，3.思</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>足够好的软件,两种乐观和失望谷底</title>
    <link href="https://felixgibson.github.io/2022/06/12/2022-06-12/"/>
    <id>https://felixgibson.github.io/2022/06/12/2022-06-12/</id>
    <published>2022-06-12T09:40:00.000Z</published>
    <updated>2023-03-13T23:45:23.422Z</updated>
    
    <content type="html"><![CDATA[<p>分享一下最近读的书和有感悟的文章。</p><h3 id="足够好的软件"><a href="#足够好的软件" class="headerlink" title="足够好的软件"></a>足够好的软件</h3><p>《程序员修炼之道》有一个章节是叫做“足够好的软件”。本章中提到了软件开发</p><ol><li>要让用户去参与权衡，其实就是及时反馈</li><li>知道何时止步。这点很容易忽视，有些软件，频繁地往上添加功能反而会适得其反。这让我想到了现在的App，比如知乎，它能直播，能视频。。这些功能反而脱离了它原本问答社区的初衷。</li></ol><blockquote><p>让用户参与权衡，如果你给用户某样东西，让他们及早使用，他们的反馈常常会把你引向更好的最终解决方案。</p><p>知道何时止步：<br>在某些方面，编程就像是绘画。你从空白的画布和某些基本的原材料开始，通过知识，艺术和技艺的集合去确定用前者做些什么，你勾画出全景，绘制背景，然后填入各种细节。你不时后退一步，用批判的眼光来观察你的作品。常常，你会扔掉画布，重新再来。<br>但艺术家会告诉你，如果你不懂得应何时止步，所有的辛苦劳作就会遭到损害。如果你一层又一层，细节复细节地叠加，绘画就会迷失在绘制之中。<br>不要因为过度修饰和过于求精而毁损完好的程序。继续前进，让你的代码凭自己的质量站立一会。也许它并不完美，但不用担心：它不可能完美。</p></blockquote><h3 id="不妨审视一下自己的态度"><a href="#不妨审视一下自己的态度" class="headerlink" title="不妨审视一下自己的态度"></a>不妨审视一下自己的态度</h3><p>在看《态度》这本书的时候无意间在豆瓣上看到一片书评，感觉写得很好： <a href="https://www.douban.com/review/12394213/?dt_platform=com.douban.activity.wechat_friends&dt_dapp=1">不妨审视一下自己的态度</a>。作者也是一个有梦想的人，同时也提醒了我公务员铁饭碗不是我想要的生活，当然996社畜也不是我想要的生活，我自己想要的生活应该是追求工作和生活的平衡，不用赚很多钱，能够写自己喜欢的代码。不过人的观念总是在动态变化的，或许以后我工作之后态度会改变呢。  </p><blockquote><p>我见过很多在外读书的大学生会在父母的要求下回到家乡的小县城，当一个公务员、老师、医生，生活得安稳舒服，接触着小地方形成的固化关系网和处事态度，不能说不好，只能说这些同学的人生道路大概率是可以看得到尽头的。<br>很多事情能用钱解决的，通常都是成本最低的解决方式，而很多人宁愿多花时间和精力走各种弯路，看似省了不少钱，可是付出的时间和精力难道就一文不值吗<br>幸运的是我在大学读了很多书，也逼着自己勇敢地去表达自己，尤其是在一些人比较多的公众场合，尝试去做各种分享和演讲，我在庆幸自己的同时，也能看到身边很多人依然无法突破自己。  </p></blockquote><h3 id="相关，因果关系与控制"><a href="#相关，因果关系与控制" class="headerlink" title="相关，因果关系与控制"></a>相关，因果关系与控制</h3><p>《决策与判断》这本书提到了一个对两个事件相关的判别方法，提到我们通常会注意到已经发生的事件而忽视了没有发生的事件。理解这点应该会对决策有所帮助。</p><blockquote><p>为了验证两者之间的联系，我们需要了解另外三个单元格中的信息：（1）祈祷者的请求有多少没有得到应验；（2）不管相信与否，没有乞求的事情有多少发生了；（3）没有乞求的事情有多少没有发生（当然，这个是没有办法进行计算的）。  </p><p>尽管这种方法表面上看起来是一种常识，但是个体往往很少关注那些没有发生的事情。正如尼斯比特和罗斯所指出的那样，这就是为什么福尔摩斯看起来在解决“银色马”疑案时是如此聪明的原因，他只不过考虑了“晚上发生在狗身上的怪事”。当巡视员报告“狗整晚都无所事事”的时候，福尔摩斯的回答是：“这是一件非常奇怪的事情”。尽管狗向入侵者咆哮是很正常的，但是没有咆哮并不是说明没有入侵者，也有可能入侵者是狗熟识的人，因此福尔摩斯缩小了怀疑对象的范围。</p></blockquote><h3 id="两种乐观"><a href="#两种乐观" class="headerlink" title="两种乐观"></a>两种乐观</h3><p>《Succeed: How We Can Reach Our Goals》这本书11章<code>keep it real</code>提到了两种乐观，一种乐观是相信你通过必要的努力，做计划，寻找合适的方法能够成功，另一种乐观是认为成功是依赖外部的因素，比如自己更加比别人更加聪明，或者更加幸运。作者提到了前一种乐观是更好的。</p><blockquote><p>The difference between unrealistic optimism, which is usually unproductive and sometimes dangerous, and realistic optimism, which is critical for achieving many of our goals, lies in why you are optimistic. When you are optimistic because you believe you can exert some control over whether you succeed or fail, by putting in the necessary effort, making plans, and finding the right strategies, that’s realistic. It’s also empowering and highly motivating. If, on the other hand, you are optimistic for reasons that are beyond your control, like relying on some fixed ability (“I’ll succeed because I’m smarter than other people”) or luck (“I’ll succeed because things always work out for me”), it can be harmful. Odds are, you won’t prepare for the task the way you should, and you will be too quick to give up when things start going badly for you.  </p></blockquote><h3 id="赌徒谬论"><a href="#赌徒谬论" class="headerlink" title="赌徒谬论"></a>赌徒谬论</h3><p>《决策与判断》中有一章讲述代表性直觉。其中很有意思的现象是“小数法则”和“赌徒谬论”。</p><blockquote><p>小数法则：<br>认为从总体中抽取的随机样本相互之间是类似的，与总体之间的接近程度比实际的统计抽样理论所预测的要高得多。<br>赌徒谬论：<br>代表性直觉可以导致人们承认赌徒谬论，这种观点认为，在一系列的坏运气之后必然会有好的结果出现(或者，用更加通俗的话讲，就是认为一系列结果相同的独立事件必然会跟随一个相反的结果)  </p></blockquote><h3 id="失望谷底"><a href="#失望谷底" class="headerlink" title="失望谷底"></a>失望谷底</h3><p>《掌控习惯》一书中对习惯结果的滞后性提出了一个“失望谷底”的概念。我认为不止习惯，包括炒股，好公司的股价也可能是这样的。</p><blockquote><p>我们经常期望进步是线性的。至少，我们希望它有立竿见影的效果。实际上，我们做出努力后，结果的显现往往滞后。或许在几个月或几年后，我们才意识到以前工作的真正价值。这可能会导致“失望谷地”的出现，也就是人们在投入数周或数月的辛勤工作后，却没有任何看得见的效果，于是会深感沮丧。然而，功夫并没有白费，它只是蓄积起来了。直到很久以后，以前努力的全部价值才会显露出来  </p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;分享一下最近读的书和有感悟的文章。&lt;/p&gt;
&lt;h3 id=&quot;足够好的软件&quot;&gt;&lt;a href=&quot;#足够好的软件&quot; class=&quot;headerlink&quot; title=&quot;足够好的软件&quot;&gt;&lt;/a&gt;足够好的软件&lt;/h3&gt;&lt;p&gt;《程序员修炼之道》有一个章节是叫做“足够好的软件”。本章中</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>经济学原理,好运气背后是三倍的努力和人生模式</title>
    <link href="https://felixgibson.github.io/2022/06/05/2022-06-04/"/>
    <id>https://felixgibson.github.io/2022/06/05/2022-06-04/</id>
    <published>2022-06-05T06:53:00.000Z</published>
    <updated>2023-03-13T23:45:23.422Z</updated>
    
    <content type="html"><![CDATA[<h3 id="经济学原理"><a href="#经济学原理" class="headerlink" title="经济学原理"></a>经济学原理</h3><p>最近在读《经济学原理》这本书，它提到了一个观点，高福利可能会导致穷人不依靠自己力量脱贫。</p><blockquote><p>有很多旨在帮助穷人的不同政策。它们有意料之外的副作用。由于经济援助随着收入增加而减少，因此，穷人往往面临很高的有效边际税率。这种高有效税率不鼓励贫困家庭依靠自己的力量脱贫  </p></blockquote><h3 id="好运气背后是三倍的努力"><a href="#好运气背后是三倍的努力" class="headerlink" title="好运气背后是三倍的努力"></a>好运气背后是三倍的努力</h3><p>吴军在《态度》这本书中，提到“好运气背后是三倍的努力”。</p><blockquote><p>好运气背后是三倍的努力<br>范佛里特将军聪明的地方在于，他比其他人更多地估计了困难，留出足够的余地。这样，幸运的天平才偏向了他那一边<br>因此，孩子，如果你想获得10分的成绩，仅仅准备10分的努力是远远不够的，你可能要准备30分的努力。有时，我们看到某些人有一些运气，似乎偶然得到了他们想要的东西。其实，在这些运气背后，可能是30分的努力。我也不是从小就懂这个道理，而是经过了一些失败和挫折才理解的。直到今天，我在做事情前，都是先假设自己将遇到比别人更坏的运气。也正因为如此，我的准备通常比别人充足，从外界来看，我才有些好运气。</p></blockquote><h3 id="人生模式"><a href="#人生模式" class="headerlink" title="人生模式"></a>人生模式</h3><p>阳志平的《人生模式》这本书还是有非常多新观点的。承认自己在很多领域比不上别人，比如吉他，做饭，职场，或许可以让自己从焦虑和内卷之中缓解开来。</p><blockquote><p>心理韧性：那些韧性强的“标准六”能够意识到，自己在科研这样的领域可能做到“标准七”，但是在艺术等领域只能做到“标准三”。这样，他们的动机强度适中，自尊体系的来回切换不会导致情绪崩溃。   </p></blockquote><blockquote><p>不少韧性差的“标准六”会走向极端，在每个领域都伪装成“标准六”甚至“标准七”，但其心理不具备在不同领域来回切换的能力，整个人会绷得很紧。表面上看，他们具备高自尊，高成就动机。但是一旦在某个领域受到打击，而且这个打击还被社交网络前三层的韧感知到了，他们就会脆弱得失去动力，滑向“标准四”  </p></blockquote><h3 id="自控力"><a href="#自控力" class="headerlink" title="自控力"></a>自控力</h3><p>《自控力》一书中提到了一个难以预料的奖励的方法，个人觉得还比较实用。</p><blockquote><p>在戒酒和戒毒的过程中，最有效的干预治疗法被称为“鱼缸法”。这就证明了，难以预料的奖励究竟有多么强大的力量。和有保证的小奖励相比，我们的奖励系统面对可能获得的大奖会更加兴奋，它会促使我们去做任何可能获奖的事。这就是为什么人们宁愿买乐透彩票，也不愿把钱存到银行里。赚取有保障的2%的利息。这也就是为什么，即便是公司最底层的员工也相信自己有朝一日能成为CEO  </p></blockquote><p>比如，自己最近在尝试用saving account搭配随机奖励方法养成习惯和戒东西。比如自己跑了3公里，就用一个app抽奖，如果自己贪吃，那么就从saving account扣除一定金额的钱，发现还挺有用的。</p><h3 id="A-Mind-for-Numbers"><a href="#A-Mind-for-Numbers" class="headerlink" title="A Mind for Numbers"></a>A Mind for Numbers</h3><p>最近在看《A Mind for Numbers》书中的一个观点：</p><blockquote><p>Creativity is a numbers game: The best predictor of how many creative works we produce in our lifetime is the number of works we produce.   </p></blockquote><p>这让我想到了自己Github项目追求的应该是数量而不是质量。 </p><blockquote><p>many students experience illusions of competence when they are studying. “repeatedly read their notes or textbook(despite the limited benefits of this strategy), but relatively few engage in self-testing or retrieval practice while studying”  </p></blockquote><p>这种错觉似乎听常见的，自己经常会有这种感受，自己重复地去重头到尾读书，会发现自己似乎什么都懂，但面试的事后面对问题还是很难回答上来。这种问题可以通过自测self-testing或者用flashcards的方式得到解决。</p><h3 id="稳定"><a href="#稳定" class="headerlink" title="稳定"></a>稳定</h3><p>最近在公众号上发现了一个博主， ViviGoodenough，她在”近期碎片记录 | 智慧、关系与个人管理”-<a href="https://mp.weixin.qq.com/s?__biz=Mzg5MDE4NjI0NQ==&mid=2247487583&idx=1&sn=212d6debba0d94d419de077a7acc3f29&chksm=cfe12f35f896a623a2a41b909f5a64f2cf86487073e9f6b06e53f299436c5111601490f645bf#rd">mp.weixin.qq</a>中，提到了一个观点，自己深有感触。</p><blockquote><p>「学校的培养体制让人习惯在划定的框架里做事，你慢慢就变得希望别人来给自己定目标才不会觉得迷茫，对边界的探索频频被大人禁止，导致从小孩时候人就开始厌恶风险，长大后习惯循规守旧，也就是常说的“做题家思维”。中国社会要的是一种老黄牛耕地般的安宁感，不幸福也过得去，但只要觉得踏实就好，这思想钢印打得我们动弹不得。如此看来，长大就是一个想象力和创造力不断走向贫瘠的过程。  </p></blockquote><blockquote><p>中国传统文化里，受农耕文明的影响，非常重视“稳定”这个概念，在读费孝通先生的《乡土中国》时我也深刻体会到这种感觉  </p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;经济学原理&quot;&gt;&lt;a href=&quot;#经济学原理&quot; class=&quot;headerlink&quot; title=&quot;经济学原理&quot;&gt;&lt;/a&gt;经济学原理&lt;/h3&gt;&lt;p&gt;最近在读《经济学原理》这本书，它提到了一个观点，高福利可能会导致穷人不依靠自己力量脱贫。&lt;/p&gt;
&lt;blockquo</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Formula for change，运气</title>
    <link href="https://felixgibson.github.io/2022/06/05/2022-06-05/"/>
    <id>https://felixgibson.github.io/2022/06/05/2022-06-05/</id>
    <published>2022-06-05T06:53:00.000Z</published>
    <updated>2023-03-13T23:45:23.422Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Formula-for-change"><a href="#Formula-for-change" class="headerlink" title="Formula for change"></a>Formula for change</h3><p>wikipedia对Formula for change-<a href="https://en.wikipedia.org/wiki/Formula_for_change">wiki</a>的解释是这样的</p><blockquote><p>C &#x3D; A × B × D &gt; X<br>C is change;<br>A is the status quo dissatisfaction;<br>B is a desired clear state;<br>D is practical steps to the desired state;<br>X is the cost of the change.</p></blockquote><p>这让我想到如果想要改变，那么只需要增加这对应三个factor就可以了，其中第2个factor让自己联想到冷哲在<a href="https://www.zhihu.com/question/28098030/answer/53305160">贫穷无法改变吗</a>中提到的无知的无知，第3个factor对应目标的分解</p><h3 id="你可以创造运气"><a href="#你可以创造运气" class="headerlink" title="你可以创造运气"></a>你可以创造运气</h3><p>程序员的喵在<a href="https://catcoding.me/p/weekly-1/">“你可以创造运气”</a> 中提到了运气表面积的观点，挺有意思的。最近自己开始写博客，也是为了让自己接触到更多的人。</p><blockquote><p>Luck Surface Area： 运气表面积？这个理论阐述的是运气对每个人是公平的，只有扩大自己的运气横截面积，才能让自己运气更好。简而言之，我们需要做更多，并且把自己做的事分享出来。  </p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Formula-for-change&quot;&gt;&lt;a href=&quot;#Formula-for-change&quot; class=&quot;headerlink&quot; title=&quot;Formula for change&quot;&gt;&lt;/a&gt;Formula for change&lt;/h3&gt;&lt;p&gt;wikipe</summary>
      
    
    
    
    
  </entry>
  
</feed>
