<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Felix&#39;s Blog</title>
  
  
  <link href="https://felixgibson.github.io/atom.xml" rel="self"/>
  
  <link href="https://felixgibson.github.io/"/>
  <updated>2025-03-07T12:39:03.947Z</updated>
  <id>https://felixgibson.github.io/</id>
  
  <author>
    <name>Felix Luo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>引言,creativity和Guide to Career Planning</title>
    <link href="https://felixgibson.github.io/2025/03/07/2025-03-07/"/>
    <id>https://felixgibson.github.io/2025/03/07/2025-03-07/</id>
    <published>2025-03-07T01:10:00.000Z</published>
    <updated>2025-03-07T12:39:03.947Z</updated>
    
    <content type="html"><![CDATA[<p> 引言<br>ps:这是解决办法吗<br>第7章探讨了一种制订战略和规划的不一样的方法这种方法承认这样一项法则即正确的市场和开发这一市场的正确战略是无法预知的这项法则被称为基于发现的规划它建议管理者假定预测是错误的而不是正确的而且他们选择采取的战略也可能是错误的基于这种假设来进行投资和管理将迫使管理者制订计划学习他们需要了解的内容而这正是成功应对破坏性技术的一种更加有效的方式   </p><p> creativity<br>从不需要creativity角度就是发现而非创造     IR  </p><p> Guide to Career Planning<br>2. Once you have picked an industry, get right to the center of it as fast as you possibly can.   </p><p> 2023_05_13<br>ChatGPT 开启了一个时代但与之竞争已成为局部战争-mp.weixin.qq(https:mp.weixin.qq.coms?__bizMjM5NzI0Mjg0MAmid2652376288idx1sndadc90b567ba31c21c348bd46b30fa58chksmbd305e578a47d741ee99c16894e400d60c9cc2dbe1116830e7548b2f8310c1920cd9b9c33777sessionid0scene126subscene0clicktime1683988197enterid1683988197ascene3fasttmpl_type0fasttmpl_fullversion6676542-zh_CN-zipfasttmpl_flag0realreporttime1683988197922devicetypeandroid-33version28002353nettypecmnetabtest_cookieAAACAA3D3Dlangzh_CNsession_usgh_37b91adc947ecountrycodeCNexportkeyn_ChQIAhIQVlyoSCVNI45i70brwZ19gBLrAQIE97dBBAEAAAAAAEUBOiD2BVRIAAAAOpnltbLcz9gKNyK89dVj041FqQBVBgJs3VILDYMn2uXAMBn3eGH7PhOFP5xF12FkdOb1BDavry2FtAaL2TzB6jRHLwS5qp43stf2bWuIqnWRelpArSUkxrXapJLIWfmbJeO2BHYN2B2IP0lwllVWhxl8pKQamlVaG88WPR2Bo3MpFd5DPXiArlOPhdtwif2KrtrHUhYE9egFeaOA9Rp9XEvrXk7DVbI2Z24SxpvmCiYs8miYluPOTUkP9xeRazVSNpBIrVwJaA5VM9EFz9BUDLbwha6CcLCDU3Dpass_ticketZ40DPHweABpzuJ1aBCWdmG2h2BmS8DCLBZpucYKi1ksVT6BgtF21gKLxCdMDwta2BoGKfwxmd5hZWQrWedc6w28Q3D3Dwx_header3) execution<br> 我们看看微软为了和 Netscape 竞争究竟错过了什么微软错过的时代<br>Netscape 的浏览器虽然很成功但它真正开创的不是浏览器这一款产品而是开启了互联网时代而微软在专注在浏览器之争的时候它错过了 Yahoo错过了 eBay错过了 Amazon错过了 Google它错过了互联网领域的几乎任何一个重要或者不重要的领域<br>再看今天OpenAI 的 ChatGPT 大语言模型成为整个世界的当红炸子鸡风光无两但是在我看来大语言模型之争已经结束了这个领域未来的巨头之间的竞争从今天开始已经沦为新的人机语言交互时代的大时代下的一场局部战争<br>到底三五年后OpenAI 会依然保持现在的领先优势还是像 Netscape 一样被另一个巨头打败对于这个时代来说对于在这里面创业的公司来说已经无足轻重最多就是科技史上的下一个故事而已<br>模型的出现时质变它的演进只是量变<br>催生了一个时代的技术不见得是这个时代最重要的技术这样的例子比比皆是<br>当然这场大语言模型的局部战争会很惨烈它依然是一个兵家必争之地但是我们这些从业者千万不要被新闻和戏剧性的冲突吸引做一些如同在 1994 - 1995 年期间去全力投入做浏览器的傻事儿</p><p> 2023_04_21<br>这里有一个如何根据pe来反推项目估值的<br>万字长文总结公开我过去六年在从事传统投资和加密投资中建立起的投资推演模型和思维决策体系-mirror.xyz(https:mirror.xyzE6989FE7A9BAE7A4BEE58CBA.ethdRF2RDw5PbKxjfzjBhDyIcDFXL1GVFrignaJWlkhNSk)<br>本文分四个部分资本市场投资逻辑的演变风险价值投资逻辑赛道项目研判方式资产配置体系认知应对市场<br>一资本市场投资逻辑的演变<br>2互联网时代被改变的游戏规则产业整合<br>因此这些大多数还在亏钱的独角兽不管是用国内资本推动模式创新也好是用国外资本推动技术创新也罢只要它能够快速地占据最大的市场份额并且能保持长期的垄断性那它就有更高更夸张的估值<br>二风险价值投资逻辑<br>所以个人投资者在这种风险偏好高的行业只能做一些变化那就是守正出奇即一方面去以风投的思路发现那些极具潜力的赛道项目去布局另一方面以传统价投的方式寻找其中确定性最大的标的<br>这套体系我称之为风险价值投资体系即用风投思维去判断行业背后的市场并提前判断即将到来的趋势和趋势下的关键赛道再用价值投资方式去选择项目<br>2.从终局的形态结合行业现状反推搜索那些行业发展的支柱型赛道提出解决核心困境的赛道支柱型赛道为确定性赛道后者为潜力性赛道<br>3.推演支柱型赛道未来13年的发展反推搜索赛道龙头项目提出解决核心困境的项目前者是确定性机会后者是潜力性机会<br>4.最后以项目发展的过程是否一直在推进项目的核心竞争力保持龙头地位持续优化解决问题的能力为前提全面对项目作尽职调查 </p><p>时至今日任何一个行业发展到出现阶级固化的阶段就意味着这个行业从上游到下游的产业链利润被分配殆尽已经达到一个完美平衡的状态这时候如果引进新的技术就代表着风险而掌控行业的寡头们除非是100确定的机会否则他们不会做出任何改变——–因为他们在旧时代里拥有的太多了<br>三个人投资过程中形成的资产配置体系<br>并且直到现在我仍旧是以比特币以太坊为大仓位其余的赛道我即便再多么看好相关的代币配置仍旧不超过整体仓位的20同时还储存了一部分现U<br>我的思路和经验是处于极早期的行业天然就具备极高的Beta收益并且是最确定性的收益因此大部分仓位在比特币和以太坊上足以建立起对市场波动强大的抵抗性并在整个持仓过程中有极佳的心态<br>同时因为早期行业对基础建设的缺失确实有非常大的机会去把握细分领域的超额收益但是加密行业整体上属于细分赛道足够确定细分项目却你方唱罢我登场的情况这时候对于前沿赛道项目需要尽可能地以小仓位博大收益来实现总仓位的投资回报率增长这样一来进退皆有据<br>最后市场总会有可能出现类似312的情况如果在那时候没有U就错过了最大的机会因此一定要配备一定比例的U来等待这个机会比如30<br>四如何认知市场以及如何应对市场变化<br>1.别人恐惧的时候自己的心理承受能力: 市场跌幅只有1020的时候所有人都记得这句话开始加仓但继续又下跌了50下跌了60甚至是80呢这时候大部分人都会陷入怀疑怎么办还会不会跌过去定下的计划全被打破要么ETH跌到1.8K的时候看1K1K的时候看0.5K  rule<br>2.需要贪婪的时候没有本钱: 这里面的问题有两个源自于对市场风险的错误认知导致在510的时候加仓太狠以至于在暴跌5060的时候没有本金了又或者是另外一种情况即在入市之前把积蓄当成了闲钱自以为自己能存个三五年结果关键时候又需要买房或者家里又出了状况甚至是因为就业环境出了问题赚不到钱了被迫在极低的位置清仓救命这部分人不是不想坚守是实在不能坚守了值得注意的是这些参与者们会在资本市场的无数大周期中被大浪淘沙与资本市场互相促进进化<br>美股是比较成熟的资本市场但美股的散户比例极低即便是有活下来的也是从机构中退役的个人投资者真正的散户比例不到10大A是只发育了三十余年不成熟的资本市场真正的散户比例是4050这个数字在前年更高但这几年被消灭了不少<br>普通投资者怎么度过这个阶段<br>这些问题可以解决吗可以但又没那么简单说可以因为说起来非常简单只要做到市场血流成河的时候我还有子弹<br>你是否对你的资金实力有深刻的认知<br>很多人错误地把积蓄当成了闲钱或者说自己本身对生活没有忧患意识<br>因为大部分人对行业未来都没有笃定和坚韧的心态但实际上巨大的资产缩水又是100已经发生的事情尤其是对于没有更多经营收入和想象力的中老年人这种损失是极其致命的能应对这种情况的办法只有让自己的投资本金在自己的风险承受能力之内但这个尺度怎么拿捏参考上文<br>假如你是年轻人你需要预留未来23年的生活费用因为年轻还有无限可能但如果你超过了40岁那么你要留下来的生活费用要覆盖3040年因为投资不是不顾一切的梭哈去追求那本不属于你的财富而是让你在现在的基础上可以变得更高并且最后失败的时候也不至于无路可退<br>当然这也是一个过程你我都是普通人最切实的办法就是让你投资到这个行业的资金随着自己的认知而变动并且不要动用画出红线的生活费    </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 引言&lt;br&gt;ps:这是解决办法吗&lt;br&gt;第7章探讨了一种制订战略和规划的不一样的方法这种方法承认这样一项法则即正确的市场和开发这一市场的正确战略是无法预知的这项法则被称为基于发现的规划它建议管理者假定预测是错误的而不是正确的而且他们选择采取的战略也可能是错误的基于这种假设</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>A collection of some thoughts about Blockchain and Web3</title>
    <link href="https://felixgibson.github.io/2023/03/05/2023-03-05/"/>
    <id>https://felixgibson.github.io/2023/03/05/2023-03-05/</id>
    <published>2023-03-05T06:39:00.000Z</published>
    <updated>2025-03-07T12:39:03.946Z</updated>
    
    <content type="html"><![CDATA[<ul><li><pre><code>Blockchains are cities</code></pre> Blockchains are cities.-written by Haseeb Qureshi,  medium(https:medium.comdragonfly-researchblockchains-are-cities-564327013f86) .</li></ul><p>City has a relatively low network effect compared to platforms like Amazon, Meta, and Twitter. Ethereum has the first mover advantage which attracts more developers and users than its competitors. But since Ethereum has some limited constraints and cannot scale unlimitedly, other layer 1 can partially attract some part of the users and developers.<br>I think this metaphor is very impressive. Here are some quotes.</p><p>Networks are the wrong analogy for blockchains. Blockchains are physically constrained. Blockchains cannot expand to infinite block space because blockchains require many independent small validators; if blocks were arbitrarily big, the blockchain would no longer be decentralized.<br>Smart contract chains are more like cities. If you embrace this mental model, then the dynamics around L1 blockchains becomes less mysterious.<br>The answer is obvious. Theres a power law distribution to city dominance, but there are many cities that matter.<br>Other L1s will be valuable too. But they will continue to differentiate. NYC, LA, Chicago, and Houston are enduring cities because their institutions and cultures are different from each other.<br>Application-specific blockchains will remain niche.<br>In the physical world, transportation accounts for almost half the GDP of housing. If we see anything like that in crypto, cross-chain bridges will become extremely valuable.     </p><p> Crypto Moats<br> Crypto Moats-varunsrinivasan(https:<a href="http://www.varunsrinivasan.com20200929crypto-moats/">www.varunsrinivasan.com20200929crypto-moats</a>)    </p><p>In web2, the moats are a very strong network effect, since every web2 app has built its own “great wall” to make cross-app interoperability almost impossible. However, in Web3, despite the network effect which still exists but become weaker, data transfer and sharing between apps is much more easily. So what are the crypto moats for web3 apps? varunsrinivasan think it is the brand and ownership.</p><p> Network effects are becoming weaker, while brand effects are getting stronger.<br> Platforms, on the other hand, create network effects when they arent interoperable. Ethereum has a community of developers building tools, which attracts more developers and users. Competing blockchains must convince developers to switch and rewrite years worth of software. Because the value isnt transferrable, Ethereum has a strong moat. These network effects reward first-movers and work against all kinds of competitors.</p><p> Criticism about the scarce property of NFT</p><p>Many people have criticized NFT is built on scarce, but the Internet is built on abundance. cdixon and Sylve both think that NFT doesn’t make the Internet more scarce instead creates another choice. </p><p>cdixon.eth-twitter(https:x.comcdixonstatus1477416947667005440)<br>NFTs make art, music, writing, games, and other creative content more abundant, not more scarce<br>Many critics of NFTs claim the opposite  that NFTs restrict access to creative content.<br>This is not a critique of NFTs. This is a critique of a fictional caricature of NFTs dreamt up by critics.</p><p>The Fundamental Ideological Divide Between Web2 and Web3-mirror.xyz(https:mirror.xyzsylve.ethVkv36_gXeD5ABtLlRmNwnxS7F_-jsSpX4bRNrIf-uiU)<br>The argument is the following: the Internet is not based on property but abundance. Native digital content has the very weird property of being naturally abundant. If you create a GIF or a JPEG you can generate unlimited copies of it and distribute it to everyone. Unlimited stock. Cornucopia of copypaste. Internet communities have flourished on the premise of remixing and sharing content for free with others, and it works really well: memes, copypastas, webcomics, emerged because of this. Therefore, if the Internet is based on abundance, why would you divide up the commons and sell them? Why would you introduce scarcity? Why would you introduce property? Why must you be so greedy?<br>And history tells us we don’t <em>need</em> records of ownership, token incentives, ICOs, or even money, to build impressive projects. Think about what has been achieved by the FOSS movement: Linux, Wikipedia are testament to the heritage of this ethos. The blockchain community cannot forget that we built most of the incredible stuff the Internet runs on with no records of ownership or money.<br>This is why I dont necessarily like Web3 as a definition of the blockchain technological paradigm(https:avc.com201502the-carlota-perez-framework). It is not a necessary strict improvement compared to what came before, its not an <em>optimization</em>, its a choice. Its a technological paradigm that enables creating what was previously impossible (native digital ownership for example) but this does not entail that it is strictly superior to the ways of the past or that it will replace it.  disruption<br>In the end I believe theres room for both frameworks. Just like video didnt actually kill the radio stars(https:<a href="http://www.youtube.comwatch/?vW8r-tXRLazs">www.youtube.comwatch?vW8r-tXRLazs</a>) (podcasts anyone?), Web3 will not kill Web2.<br>Digital ownership will not kill abundance.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;pre&gt;&lt;code&gt;Blockchains are cities
&lt;/code&gt;&lt;/pre&gt;
 Blockchains are cities.-written by Haseeb Qureshi,  medium(https:medium.comdragonf</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>忘记目标专注体系</title>
    <link href="https://felixgibson.github.io/2023/02/25/2023-02-25/"/>
    <id>https://felixgibson.github.io/2023/02/25/2023-02-25/</id>
    <published>2023-02-25T08:59:00.000Z</published>
    <updated>2025-03-07T12:39:03.945Z</updated>
    
    <content type="html"><![CDATA[<ul><li>一些有意思的观点</li></ul><p> 忘记目标专注体系<br>Farnam Street 有一片文章写的还可以_Habits vs. Goals: A Look at the Benefits of a Systematic Approach to Life_(https:fs.bloghabits-vs-goals) 文中提到了相较于专注于目标我们更应该专注于习惯类似的观点掌控习惯这本书也有提到</p><p>目标是关于你想要达到的结果而体系是涉及导致这些结果的过程专注于目标会带来4个问题</p><ul><li><p>问题1赢家和输家心怀相同的目标</p></li><li><p>问题2实现一个目标只是短暂的改变</p></li><li><p>问题3目标束缚了你的幸福感</p></li></ul><p> 任何目标都隐含着这样的假想一旦我实现了那个目标我就会很快乐目标优先心态的问题是你一直在延迟享受快乐总是寄希望于下一个里程碑的实现<br> 此外目标会导致非此即彼的冲突你要么实现了预定目标最终取得了成功要么你失败了并令人大失所望你在精神上把自己禁锢在一种狭隘的幸福观之中这属于自我误导你实际走出的人生道路不太可能与你出发时心目中的旅程完全匹配成功之路不止一条你毫无必要认定只有某个特定场景的出现才能让你对自己的人生感到满意<br> 系统至上的心态对此提供了解药当你爱上过程而不是结果时你不必等待容许自己享受快乐的那一刻的到来只要你创建的体系在正常运行你就会在整个过程中感受到快乐另外一个体系取得成功的方式有多种而不仅仅是你最初想象的那一种</p><ul><li>问题4目标与长远改进的大方向不一致</li></ul><p> 最后以目标为导向的思维定式会产生溜溜球效应许多跑步运动员可以连续不断地刻苦训练几个月但是当他们完成了比赛之后就会偃旗息鼓停止训练赛事已然结束不再激励他们刻苦训练当你所有的努力都集中在一个特定的目标上时一旦目标实现推动你努力前行的动力也就失去了依托这就是为什么许多人在完成预定目标后又恢复了旧习惯<br> 设定目标的目的是赢得比赛构建体系的目的是持续参与这项赛事意在长远的思维方式不会拘泥于具体的目标这不是为了取得任何单一的成就而是一个精益求精日趋进步的循环过程归根结底你对这个过程锲而不舍的坚持决定着你的进步</p><p> 最大熵模型</p><p>VC领域其实有一个幂数定律_The Power Law_  整本书就是讲的是大概是这个定律同样的吴军在数学之美和硅谷之谜两本书也讲到了这个mental model</p><p>摘自硅谷之谜<br> 在信息论里有一个最大熵原则具体有两层含义首先在没有信息的情况下不能对未来做任何主观的假设其次在获得了一些知识或者信息的情况下作出的判断首先要符合这种知识当然对其他事物的判断依然不能做任何先验的假设这样才能做到风险最小回报最大好的风险投资人不做事先的假定不知道未来的发展方向一定是什么样的他们希望从创业者那里了解这种信息在得到一些信息后他们作出适当的反应而且为了降低投资风险他们不会把鸡蛋放在一个篮子里同时一旦察觉到某种技术趋势他们会让自己的一部分投资符合这种技术趋势<br> 风险投资的第二个原则与香农第一定律和霍夫曼编码原则相一致也即要把最多的资源投给最有可能成功的项目当然这个最有可能通常不是预测出来的而是根据实际运营的结果看出来的比如风险投资人先对100个项目进行评估删掉不靠谱的然后选择20个各方面都比较好的项目进行投资在投资之前他们并不在意这20个项目哪一个就比另一个好过了一段时间比如在这些项目需要下一轮融资时投资人会重新评估这些项目根据创始团队的表现和项目的进展对发展超出预期的项目增加投资专业术语叫做Double Down对表现一般的项目就顺其自然对于表现差的项目甚至会设法退出一部分投资这样到了第二轮投资人可能又对其中的六到七个项目追加了投资类似地投资人会根据项目的表现不断作出及时反应最终他们会在成功的项目中占有尽可能多的股份在失败的项目中则将损失控制到最小</p><p>对企业最大熵模型的运用</p><p>在字节跳动公司内存在大大小小数百个项目那么如何分配资源呢就是根据最大熵模型在没有信息的情况下不能主观假设这个app能够做成还是不能做成当项目开始有进展或者达到目标了就投入再多一点的资源这样那些最优可能成功的项目就会被给予更多的资源也就更容易跑出来</p><p>对个人最大熵模型的运用</p><p>管理风险从高风险可能有高回报到低风险低回报技术存在于这样一条谱带上把你所有的金钱都投入突然崩盘的高风险股票并不是要给好主意你也不应该太保守错过可能的机会不要把你所有的技术鸡蛋放在一个篮子里</p><p>ps. 关于 <em>The Power Law</em> 可以看张小珺的这篇文章和作家马拉比聊The Power Law硅谷风投的起源秘密和大人物肖像(https:mp.weixin.qq.coms?__bizMzU0MDk3ODUwMAmid2247484165idx1sn5a04910e76e1b3567ccc2e9fb36fdafechksmfb31bf2ecc4636387ec37a0c92a79f81aaa6594401c952c0f4a32d1cd0f3ff6d2a023661de82rd)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;一些有意思的观点&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; 忘记目标专注体系&lt;br&gt;Farnam Street 有一片文章写的还可以_Habits vs. Goals: A Look at the Benefits of a Systematic Approach to L</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>专一到通用</title>
    <link href="https://felixgibson.github.io/2022/12/04/2022-12-04/"/>
    <id>https://felixgibson.github.io/2022/12/04/2022-12-04/</id>
    <published>2022-12-04T08:12:00.000Z</published>
    <updated>2025-03-07T12:39:03.947Z</updated>
    
    <content type="html"><![CDATA[<ul><li><pre><code>专一到通用</code></pre>对于问题很多问题如果一开始就想有一个通用的解法其实是非常难的</li></ul><p>吴军在见识之中提到了一个观点对于创业型公司来说如果一开始就定位为平台产品那么很容易失败</p><p> 虽然我在浪潮之巅一书中 一直讲在商业中绕不过去的一环能挣到最大的钱而掌握这样一环的都是平台公司但是没有人一开始 就能够做出一个通用平台今天大家看到谷歌挣大钱阿里巴巴可以控制上下游很风光但是在早期它 们的业务面都很窄谷歌靠的是搜索它最初一两年的收入并不高阿里巴巴则是做 B2B(企业对企业电子 商务牵线搭桥的苦差事只不过后来它们在单点上做得非常精深实现了利用核心优势的突破腾讯的情 况也是类似靠聊天软件起家分发短信挣点小钱通过游戏挣钱已经是非常晚的事情了能够单点突破改 变整个行业的公司其实并不多做到这个境界常常是结果而不是一开始的目标 </p><p>amazon是从书店发家的京东从电器电子发家医学也有一个例子对于癌症最开始大家都想设计一个东西去完全解决所有癌症但是后面出现了针对特定类型癌症的解决方案还有GAI我认为通用人工智能肯定出现比较晚而特定领域的人工智能应该是最早可以实现的最早可以商用的</p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;pre&gt;&lt;code&gt;专一到通用
&lt;/code&gt;&lt;/pre&gt;
对于问题很多问题如果一开始就想有一个通用的解法其实是非常难的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;吴军在见识之中提到了一个观点对于创业型公司来说如果一开始就定位为平台产品那么很容易失败&lt;/p&gt;
&lt;p&gt; 虽然我</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>创新</title>
    <link href="https://felixgibson.github.io/2022/11/26/2022-11-26/"/>
    <id>https://felixgibson.github.io/2022/11/26/2022-11-26/</id>
    <published>2022-11-26T02:46:00.000Z</published>
    <updated>2025-03-07T12:39:03.948Z</updated>
    
    <content type="html"><![CDATA[<ul><li><pre><code>创新的本质是连接</code></pre>创新的本质是对已有的东西以新奇的方式进行组合我喜欢的一个博主james clear在 Creativity(https:jamesclear.comcreativity) 这篇博客中写到<br> The creative process is the act of making new connections between old ideas or recognizing relationships between concepts. Creative thinking is not about generating something new from a blank slate, but rather about taking what is already present and combining those bits and pieces in a way that has not been done previously.</li></ul><p> 伟大创意的诞生创新自然史 这本书中也提到了同样的观点<br>  创意一般是像进化一样是基于已有环境的小改进偶尔有大的跳跃式的创意只能失败比如19世纪巴贝奇的分析机可以说是计算机的爷爷理论上可行工程上来说当时完全不现实<br>    创意的诞生需要有网络并且创意可以产生新的连接比如说从狩猎社会到农业社会社会关系网络更大了人与人的交互更多了人类的发明创造随之增多<br>    城市的创新指数随着规模的扩大而呈指数级增长<br>    开放促进创意的产生</p><p> Don’t Start From Scratch<br>不要从0开始james clear在How Innovative Ideas Arise(https:jamesclear.comdont-start-from-scratch) 提到了为什么从0开始是一个坏主意<br> Too often, we assume innovative ideas and meaningful changes require a blank slate. When business projects fail, we say things like, Let’s go back to the drawing board. When we consider the habits we would like to change, we think, I just need a fresh start. However, creative progress is rarely the result of throwing out all previous ideas and innovations and completely re-imagining of the world.</p><p> 发现而非创造<br>创新应该是去发现可能去颠覆现有产业的技术而不是去自己发明吴军在见识这本书中提到了硅谷的N1创新法<br> 今天不少人也把颠覆现有行业放在嘴边但是真正实现了颠覆的人很少反而山寨的人却很多这又是为什么呢因为叛逆者们颠覆现有秩序不是一件容易的事情要想改变世界需要有常人所没有的执着桂谷的叛逆者们为了达到目的首先会想尽办法去寻找那些可能颠覆现有产业的技术注意是寻找而不是发明)这样那些在其他地区被发明却又被束之高阁的技术就被硅谷的颠覆者带到硅谷继续发扬光大在前一节中我讲到过新技术常常不可靠时灵时不灵要将这样的技术转变成产品需要有足够的耐心和智慧克服一个又一个困难走完从1到N的漫长路程</p><p> 国产替代的危害</p><p>之前公司内部有一个分享当时一个同事提了一个非常好的观点国产替代其实对公司的创新是有所损害的真正的创新应该是去做全球化去和国外的优秀公司竞争比拼而不是在一个墙内做copy to china的工作</p><p> 那我觉得国产替代这个事情我觉得它是一个非常非常 tricky 的一个地方就是一方面你是觉得说国产替代让你的确可以有的一个契机去进入这些这些大的这些大企业但是这个就跟我们刚才所说的创业创新这东西本质它又有一些背离比如说这些企业本身它不是因为市场不是因为真正需求的原因而去换的所以它不是你最优秀客户因为它并没有痛点他不是因为我是真正使用这个产品的特点而去换的所以这些用户你去服务他他给你的需求会被会把你带偏所以这个对于早期的创业公司来说你最需要就是最优质的这个用户的反馈来帮你打磨产品然后第二个就是第二个我觉得就是我们刚才所说的这个就是他没有办法帮你去就是他会非常牵扯你的人员的效率因为这样就是越是这些企业它的历史包袱越多就你越是得帮它做一些你的这个核心创新之外的事情这个会这样会极大的这个降低企业这个迭代的速度所以我觉得国产替代这个事情是非常双刃剑的一个一一个事情</p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;pre&gt;&lt;code&gt;创新的本质是连接
&lt;/code&gt;&lt;/pre&gt;
创新的本质是对已有的东西以新奇的方式进行组合我喜欢的一个博主james clear在 Creativity(https:jamesclear.comcreativity) 这篇博客中写到&lt;br&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>管道化和Intel and the Danger of Integration</title>
    <link href="https://felixgibson.github.io/2022/10/29/2022-10-29/"/>
    <id>https://felixgibson.github.io/2022/10/29/2022-10-29/</id>
    <published>2022-10-29T03:09:00.000Z</published>
    <updated>2025-03-07T12:39:03.946Z</updated>
    
    <content type="html"><![CDATA[<ul><li><pre><code>管道化</code></pre>最近非常有时间研究了一下”管道化”这个话题”管道化”就是价值捕获的向上流动一个比较明显的例子就是微信把各大运营商给管道化了<br>其实在各个领域都能看到管道化的例子</li></ul><ol><li>区块链领域各种Layer2有把Ethereum管道化的趋势但不太明显</li><li>语言领域: Kotlin有把Java管道化的趋势TypeScript也有把JavaScript管道化的趋势</li><li>金融移动支付把银行给管道化了</li><li>互联网前端把原生客户端给管道化了</li><li>直播带货各大KOL把平台给管道化了比如主播可以去淘宝也可以去抖音带货这样议价能力比较强不会被平台束缚</li><li>Chrome把操作系统管道化了</li><li>k8s把Docker管道化了</li></ol><p>如果处在层次的下层如果避免被上层管道化其实观察这些现象会发现一些特点管道化和被卡脖子的区别是管道化有多个下层比如chrome不止在windows上运行也能在linux, macOS上运行k8s不止运行docker也支持podman手机前端下面不止有android还有iOS而被卡脖子则是只有一个下层比如微信小程序 微信小程序就很难把微信管道化</p><p>关于管道化还有一篇文章讲的不错我们为什么不尽早施行国产 CPU国产 Linux 系统战略呢-zhihu(https:<a href="http://www.zhihu.comquestion328134586answer831317109/">www.zhihu.comquestion328134586answer831317109</a>)<br> 如果A和B中断一切X领域的交流那么大概率上在可预见的未来在X领域A国会一直领先B国而且这个差距很可能是越拉越大马太效应为什么因为A国和B国都是人类组成的两国人的智商在统计上看没什么区别<br>    如果A国和B国保持X领域的交流那么结果就是B国会在X领域延伸出一个接口领域这个接口就是和A国的X领域做对接的比如把A国的资料翻译成B国文字参加A国X领域的技术交流等等比如我国的机械工业出版社就翻译了很多理工科领域的英文经典书籍由于接口工作需要时间的投入才能完成所以B国技术人员中的精英们会慢慢深入这个接口领域直接从A国获取X领域的最新知识而不会慢慢等接口的人做完翻译等工作</p><p>我理解上文的接口领域就是层次中的下层对上层提供的接口</p><p>此外还有一篇文章讲价值的向上流动讲的不错IT行业未来10年和20年技术发展方向会是什么-zhihu(https:<a href="http://www.zhihu.comquestion24222456answer2276824013/">www.zhihu.comquestion24222456answer2276824013</a>)</p><ul><li>让我们观察一下计算机领域的发展过程从一百年前到今天IT 领域的热点其实一直在向上移动的所谓向上移动是指抽象的层级而这个过程始终都指向一个目的就是屏蔽更多的底层细节让计算机的使用者开发者能够花更多的时间在创造和享受上<ul><li>我们从打孔机走到了操作系统再从操作系统走到了容器化再从容器化走到了云计算Serverless操作系统屏蔽了硬件的细节k8s 屏蔽了物理机的细节而 Serverless 则更进一步直接把集群的细节也屏蔽了而我们可以确定的是这个过程在能看到的几十年内还会持续下去而且会继续加速 </li><li>当某些关键的问题解决之后或是某些关键的技术成熟之后一些问题可能就不再是问题一些经验也将不再适用一些技能会被淘汰一些人会失业这个过程不会停滞只会持续下去 </li><li>如果没有明确的偏好那就选择正在蓬勃发展的领域这里有更多的机会如果有偏好要仔细想想这个偏好是不是仅仅因为你更倾向于喜欢自己擅长的所带来的幻觉</li><li>对技术的发展始终保持乐观态度和想象力不要只做一个新技术的接受者要尽可能做一个前瞻者</li><li>与谁同行比做什么更重要尽量多接触喜欢关注前沿技术倒腾新技术的人如果他们是你的同事那再好不过</li><li>如果每次的新技术出现都在你的预期之外那说明你并没有花时间去思考技术的发展趋势和底层逻辑这对于工程师是一个危险的信号</li><li>一切能通过明晰的路径做到的事情都具备替代性要想提升自己的不可替代性最重要的是抓住机会在关键的产品中担任关键的位置取得关键的成果</li><li>但我们发现Web 开发的抽象层级其实是不如游戏开发的从这两家的产品切入去看对比就十分明显虚幻引擎是 Engine而 Vercel 离开发者最近的部分其实是 Next.js它仍然是一个 Framework 如果把抽象层级排个序大概是这样语言 - 库 - 框架 - 引擎 </li><li>还有一个我想讨论的是很多人都担心更上层的工具会有自由度的限制比方说带 gc 的语言让我们失去了对内存的自由控制拖拽卡片式编程则很难实现复杂逻辑的编写看似更高层次的工具是剥夺了生产者的自由度然而我的观点是每一次更高层次的工具出现其实都是让人们生产出了更好的软件这些更好的软件你用更底层的工具去做未必能做出来</li><li>降低门槛屏蔽细节反而让更优秀更复杂甚至是性能更高的软件被生产出来了一个典型的例子就是绝大多数工程师用汇编写的代码还不如用 C 写然后 gcc 编译出来的代码执行效率高</li><li>抽象层级的改变会带来范式的转移什么是范式当从原子角度看桌子电脑甚至是芯片都没有意义因为都是一个一个的原子而从宏观角度看我们则可以定义固体液体虽然电脑和桌子之间有分子相互传递可这不影响我们把电脑和桌子看成两个独立的部分同样道理你也没办法直接用汇编去进行声明式或是响应式的编程 </li><li>而元宇宙游戏其实就是游戏平台的 UGC 化游戏提供非常简易门槛极低的低代码工具让很多有创造力的用户可以创造各种各样的小游戏我最喜欢玩的 VR 游戏 Rec Room 就是其一它应该是第一个把游戏引擎做到了 VR 游戏中的游戏玩家可以直接使用 Maker Pen 在 VR 中完成游戏的创造包括模型动画游戏逻辑</li></ul></li></ul><p>文章的意思也是web引擎会把底层的比如web语言库框架给管道化</p><p> Intel and the Danger of Integration<br>Stratechery是我非常喜欢看的一个blog网站基本上每篇都会看2018年博主发了一片文章”Intel and the Danger of Integration”-stratechery(https:stratechery.com2018intel-and-the-danger-of-integration) 看完之后非常有收获<br> PCs, long Intels chief money-maker, were in decline, leaving the company ever more reliant on the sale of high-end chips to data centers; Intel had effectively zero presence in mobile, the industrys other major growth area.<br> Intel, meanwhile, was hemmed in by its integrated approach. The first major miss was mobile: instead of simply manufacturing ARM chips for the iPhone the company presumed it could win by leveraging its manufacturing to create a more-efficient x86 chip;<br>  The companys integrated model resulted in incredible margins for years, and every time there was the possibility of a change in approach Intels executives chose to keep those margins.</p><p>虽然我们都可以看到苹果统一上下游产业链聚合的好处但是除去苹果这个例外事实上尝试做统一上下游产业链的都没有好下场甚至苹果本身也差点死在这上面<br>苹果既做硬件又做软件很难平衡两者的速度软件做得太快了硬件就跟不上,硬件做得太快了又没有合适的软件可用<br>吴军在浪潮之巅中对摩托罗拉失败的原因做了一些分析有一个原因就是integration和Intel失败的原因一样<br> 德州仪器很像计算机领域的英特尔公司它自己不做手机而是向许许多多手机厂商提供核心芯片它通过其领先的DSP技术牢牢占据了世界2G高端手机市场的半壁江山摩托罗拉的战线则拉得很长,从手机芯片到手机整机一条龙如果内部合作得好,这种做法成本固然低但是,高尔文不是通用电气的韦尔奇,没有能力整合这么大的公司,其芯片部门和整机部门像两个单独的公司没有足够的沟通,反而倬得产品开发周期变长</p><p>同时在谈到微软时吴军也在浪潮之巅中写到<br> 苹果拒绝开放麦金托什计算机技术的结果,客观上把所有想从个人电脑市场分一杯羹的兼容机厂商推给了IBM和微软<br> 苹果失去地利的一个更深层的原因是它在某种程度上违反了信息领域的摩尔定律和安迪比尔定律整个计算机工业的规模达上万亿美元,绝不是一家公司能吃下的<br> 苹果既做硬件又做软件很难平衡两者的速度软件做得太快了硬件就跟不上,硬件做得太快了又没有合适的软件可用</p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;pre&gt;&lt;code&gt;管道化
&lt;/code&gt;&lt;/pre&gt;
最近非常有时间研究了一下”管道化”这个话题”管道化”就是价值捕获的向上流动一个比较明显的例子就是微信把各大运营商给管道化了&lt;br&gt;其实在各个领域都能看到管道化的例子&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>为什么游戏会成瘾</title>
    <link href="https://felixgibson.github.io/2022/09/24/2022-09-24/"/>
    <id>https://felixgibson.github.io/2022/09/24/2022-09-24/</id>
    <published>2022-09-24T08:14:00.000Z</published>
    <updated>2025-03-07T12:39:03.947Z</updated>
    
    <content type="html"><![CDATA[<ul><li><pre><code>为什么游戏会成瘾</code></pre>TL; DR<br>游戏本身的variable reward加上家长对孩子游戏的管控不明确的管控规则朝令夕改的态度导致游戏成瘾被强化</li></ul><p> Reason One: Variable Reward.<br>最近在supermemo wiki上看到了一片非常好的文章讲述了儿童游戏成瘾的原因原文标题Reward diversity in preventing addictions-supermemo.guru(https:supermemo.guruwikiReward_diversity_in_preventing_addictions)  下面介绍一下文章的主要观点<br> Gaming addiction is allegedly caused by variable reward(https:supermemo.guruwikiVariable_reward “Variable reward”), however, inconsistent parenting can produce a more dangerous variability at a higher level. In the end, it may turn out that a parent is more guilty than a game developer. </p><p>游戏成瘾的原因在于variable reward可变奖励什么是可变奖励这牵扯到B. F. Skinner的Operant conditioning-wiki(https:en.wikipedia.orgwikiOperant_conditioning)wikipedia中介绍了<br> As stated earlier in this article, a variable ratio schedule yields reinforcement after the emission of an unpredictable number of responses. This schedule typically generates rapid, persistent responding. Slot machines pay off on a variable ratio schedule, and they produce just this sort of persistent lever-pulling behavior in gamblers. The variable ratio payoff from slot machines and other forms of gambling has often been cited as a factor underlying gambling addiction.  </p><p>游戏的奖励是variable ratio的因此这会导致成瘾行为<br> Reason Two: Deprive children’s Freedom<br>还有一个原因是家长的干涉反而导致罗密欧和朱丽叶效应<br> The main risk for developing a gaming disorder(https:supermemo.guruwikiGaming_disorder “Gaming disorder”) stems largely from the assault on child’s freedoms. In an attempt to control gaming time, parents introduce unclear rules, spark fights, impose restrictions, improvise, confiscate devices, impose penalty chores, etc. The more irrational and unpredictable their behavior, the more the reward of access to gaming become variable reward. In addition, school plays a similar role and adds to the sense of loss of control. This is exactly how variable reward drives gambling at the level above the game itself. The reward is the access to the game, not the tricks that a game developer might have programmed in to keep kids addicted. A healthy brain will saturate. The joy and attraction cannot last for ever. There are other attractions in life. There are other games. There is fatigue. There are many balancing forces that terminate gaming without the fall into addiction (see: Videogames and TV tend to saturate(https:supermemo.guruwikiVideogames_and_TV_tend_to_saturate “Videogames and TV tend to saturate”)).</p><p> Reason Three: Parents’ Unpredictable Behavior<br>这一条对Reason Two更近一步家长除了干涉孩子打游戏的时间还对规则朝令夕改家长本身的行为也难以预测这也成为了另外一种Variable reward或者叫Variable punishment由此游戏的成瘾行为被放大了</p><p> 我的思考<br>解决办法第一步应该是是欲望转移即找到其他更加有趣的事情这样游戏就没有那么有吸引力了文章中也有提到<br> Diversity(https:supermemo.guruwikiDiversity “Diversity”) of reward is an important defense against the dangers of variable reward(https:supermemo.guruwikiVariable_reward “Variable reward”). Reward diversity is preventive in depression.</p><p>第二步应该是让Operant Conditioning satiating化Operant Conditioning wikipedia中写到<br> SatiationDeprivation: The effectiveness of a positive or “appetitive” stimulus will be reduced if the individual has received enough of that stimulus to satisfy hisher appetite. The opposite effect will occur if the individual becomes deprived of that stimulus: the effectiveness of a consequence will then increase. A subject with a full stomach wouldn’t feel as motivated as a hungry one.19(https:en.wikipedia.orgwikiOperant_conditioningcite_note-Miltenberger84-19)</p><p>就是稳定的满足将会降低对游戏的欲望</p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;pre&gt;&lt;code&gt;为什么游戏会成瘾
&lt;/code&gt;&lt;/pre&gt;
TL; DR&lt;br&gt;游戏本身的variable reward加上家长对孩子游戏的管控不明确的管控规则朝令夕改的态度导致游戏成瘾被强化&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; Reason One: Var</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>保留足够的资源试错</title>
    <link href="https://felixgibson.github.io/2022/08/27/2022-08-27/"/>
    <id>https://felixgibson.github.io/2022/08/27/2022-08-27/</id>
    <published>2022-08-27T01:10:00.000Z</published>
    <updated>2025-03-07T12:39:03.947Z</updated>
    
    <content type="html"><![CDATA[<ul><li><pre><code>保留足够的资源试错</code></pre>创新者的窘境中提到了一个观点就是新兴企业在不断发展地过程中可能会频繁地变更方向因此相较于一开始就all in投入巨大的资源去做一个不明朗的项目更重要地是保留足够的资源这样当发现需要变更方向的时候能够再之后进行第二次或者第三次尝试<br>实际上研究已经表明绝大多数成功的新兴企业都在开始实施最初的计划并了解到哪些计划行之有效哪些只是纸上谈兵时放弃了最初的商业战略成功企业与失败企业的主要差别通常并不在于它们最初的战略有多么完美在初始阶段分析什么是正确的战略其实并不是取得成功的必要条件更重要的是保留足够的资源或是与值得信赖的支持者或投资者建立良好的关系这样新业务项目便能在第2次或第3次尝试中找到正确的方向那些在能够调转航向转而采用可行的战略之前便用尽了资源或信用度的项目就是失败的项目</li></ul><p>我将这种发现破坏性技术新兴市场的方法命名为不可知营销根据这种方法进行市场营销必须遵循这样一个明确的假设即没有人不论是我们还是我们的客户能够在真正使用之前了解破坏性产品是否能够投入使用怎样使用或者使用量有多大  </p><p>人们通常会把他们不了解的事物的风险性放大不管它们的内在风险到底有多大并将他们确实了解的事物的风险性缩小同样不管它们的内在风险到底有多大  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;pre&gt;&lt;code&gt;保留足够的资源试错
&lt;/code&gt;&lt;/pre&gt;
创新者的窘境中提到了一个观点就是新兴企业在不断发展地过程中可能会频繁地变更方向因此相较于一开始就all in投入巨大的资源去做一个不明朗的项目更重要地是保留足够的资源这样当发现需要变更方向的时</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Be Proactive,The Relaxation Algorithm和最优化</title>
    <link href="https://felixgibson.github.io/2022/07/29/2022-07-29/"/>
    <id>https://felixgibson.github.io/2022/07/29/2022-07-29/</id>
    <published>2022-07-29T14:39:00.000Z</published>
    <updated>2025-03-07T12:39:03.946Z</updated>
    
    <content type="html"><![CDATA[<ul><li><pre><code>Be Proactive</code></pre> The 7 Habits of Highly Effective People 中早就提到过”be proactive”的原则但是今天在吴军的 态度 又重温了一遍会有新的感悟职场确实应该主动去给自己找事干而不是被动等待上级分配事情这对自己的职业发展无疑是有益的<br>导师库旦普博士对我说在接下来的一年里我要尽可能和公司每个人吃一顿午饭当时谷歌还很小做到这一点很容易虽然我最后没有做到和每个人吃一顿午饭但是大致做到了和上百人吃过午饭因此我也建议你这样做它的好处至少有三个一是可以建立广泛的人脉关系因为在你未来的职业发展道路上那些同事可能会帮助你我在ATT实习之后我的导师罗伯托皮尔切尼博士平时经常一起聊天的戈登博士对我后来的职业发展提供了非常大的帮助二是通过和他们交流了解整家公司乃至整个行业的情况开阔你的视野三是可以提升你的软实力如果你非常忙没有太多时间和大家一一交流那么各种团队活动你都应该积极参加另外虽然你是在硅谷地区长大的但是很多和你一样实习的学生却不是在工作之余比如周末不妨带大家到周围转转算是你尽到了地主之谊也方便你结识更多的朋友</li></ul><p>我的第一个体会是在工业界要主动工作这个主动不完全是提前完成任务之后找导师要新任务它有更深刻的内涵在学校里大部分工作都是课程规定的或者老师布置的只要在最后期限前完成就可以在公司实习时你的导师会给你布置一些任务他也许会给你规定一个期限但是通常不会给你这样的压力不过虽然没有给你规定期限导师也希望你主动把事情做好所谓主动就是指你有自己的想法和规划并且随时和他进行沟通得到他甚至其他同事的反馈尽管公司都会要求实习生的导师像老师一样布置任务甚至在生活上给你们关心但是事实上公司里的工程师或者研究员通常不会像大学教授那样给你布置作业并且给你细节指导因为他们通常会忙于自己的工作因此你工作的主动性就显得很重要  </p><p> The Relaxation Algorithm<br>最近在读 Algorithms to Live By 这本书这本书主要是将一些算法应用人生上面有一章讲到了一个Relaxation的算法从著名的旅行商问题延伸出来的一个算法作者做了一个非常有意思的类比将其类比到人生选择中个人觉得非常有意思<br>Though most of us havent encountered the formal algorithmic version of Constraint Relaxation, its basic message is familiar to almost anyone whos dreamed big about life questions. What would you do if you werent afraid? reads a mantra you might have seen in a guidance counselors office or heard at a motivational seminar. What would you do if you could not fail? Similarly, when considering questions of profession or career, we ask questions like What would you do if you won the lottery? or, taking a different tack, What would you do if all jobs paid the same? The idea behind such thought exercises is exactly that of Constraint Relaxation: to make the intractable tractable, to make progress in an idealized world that can be ported back to the real one. If you cant solve the problem in front of you, solve an easier version of itand then see if that solution offers you a starting point, or a beacon, in the full-blown problem. Maybe it does.  </p><p>What relaxation cannot do is offer you a guaranteed shortcut to the perfect answer. But computer science can also quantify the tradeoff that relaxation offers between time and solution quality. In many cases, the ratio is dramatic, a no-brainerfor instance, an answer at least half as good as the perfect solution in a quadrillionth of the time. The message is simple but profound: if were willing to accept solutions that are close enough, then even some of the hairiest problems around can be tamed with the right techniques.  </p><p> 最优化</p><p>租房与谈恋爱在书中都被归入最优停止问题算法的答案是在37的时候做选择细节可以看书  </p><p>3舒普指出当停车位占用率从90升至95时尽管仅多停了5的车但是大家寻找停车位的时间就会翻一番   </p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;pre&gt;&lt;code&gt;Be Proactive
&lt;/code&gt;&lt;/pre&gt;
 The 7 Habits of Highly Effective People 中早就提到过”be proactive”的原则但是今天在吴军的 态度 又重温了一遍会有新的感悟职场确实应</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>A Mind for Numbers破化性技术</title>
    <link href="https://felixgibson.github.io/2022/07/24/2022-07-24/"/>
    <id>https://felixgibson.github.io/2022/07/24/2022-07-24/</id>
    <published>2022-07-24T08:52:00.000Z</published>
    <updated>2025-03-07T12:39:03.948Z</updated>
    
    <content type="html"><![CDATA[<ul><li><pre><code>A Mind for Numbers</code></pre>困难的事情优先A Mind for Numbers中提到了困难的事情优先然后遇到阻碍切换到容易的事情这个方法可以类比计算机的时间片调度当遇到IO等情况可以切换为其他进程</li></ul><p>Then when you start working problems, start first with what appears to be the hardest one. But steel yourself to pull away within the first minute or two if you get stuck or get a sense that you might not be on the right track.<br>In some sense, with this approach to test taking, youre being like an efficient chef. While youre waiting for a steak to fry, you can swiftly slice the tomato garnish, then turn to season the soup, and then stir the sizzling onions. The hard-startjump-to-easy technique may make more efficient use of your brain by allowing different parts of the brain to work simultaneously on different thoughts.  </p><p> 破坏性技术<br>创新者的窘境中提到的破坏性技术让我印象深刻<br>企业如果想要发展破坏性技术那么第一点就是应该不要密切关注用户<br>第一市场要求的或者能够消化的发展速度可能会与技术能够达到的发展速度存在差异这就意味着今天似乎对客户来说不太有实用价值的产品即破坏性技术日后可能足以满足他们的需求认识到这种可能性我们就不能指望客户会引导我们发展他们当前并不需要的创新因此尽管密切关注我们的客户是应对延续性创新的一个重要管理范式但它可能会在我们应对破坏性创新时给我们提供具有误导性的数据   </p><p>如果一个技术想要成为破坏性技术那么它必须最终的性能要达到主流市场所需求的水准当下可能的破坏性技术有Web3, VRAR云游戏等推测Web3底层公链的TPS必须达到PayPal甚至超过PayPal多个数量级才能承载Web3 dApp的广泛使用在此之前dApp应该会在一个独特的价值网络中慢慢发展<br>要回答这些问题我需要绘制一张市场所要求的性能改善轨线并将其与技术能够提供的性能改善轨线进行比较  </p><p>但这一信息并不足以说明电动汽车具有破坏性产品的特性只有在我们发现其性能改善曲线在日后有可能会与主流市场的需求相交汇时我们才能说电动汽车是一种破坏性产品为了评估这种可能性我们需要绘制轨线并将市场要求的性能改善轨线与电动汽车技术可能提供的性能改善轨线进行比较如果这两条轨线是平行的那么电动汽车就不太可能成为主流市场上的一分子但如果电动汽车技术的发展速度快于市场要求的性能改善速度那么这种技术就真的会给市场带来破坏性威胁  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;pre&gt;&lt;code&gt;A Mind for Numbers
&lt;/code&gt;&lt;/pre&gt;
困难的事情优先A Mind for Numbers中提到了困难的事情优先然后遇到阻碍切换到容易的事情这个方法可以类比计算机的时间片调度当遇到IO等情况可以切换为其他进程&lt;/l</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>How to reduce overconfidence和广度vs深度</title>
    <link href="https://felixgibson.github.io/2022/07/16/2022-07-16/"/>
    <id>https://felixgibson.github.io/2022/07/16/2022-07-16/</id>
    <published>2022-07-16T08:16:00.000Z</published>
    <updated>2025-03-07T12:39:03.947Z</updated>
    
    <content type="html"><![CDATA[<ul><li><pre><code>How to reduce overconfidence</code></pre>社会心理学中提到了两个克服overconfidence的方法其中一个是prompt feedback立刻反馈另一个是思考为什么自己可能是错的<br>Two techniques have successfully reduced the overconfidence bias. One is prompt feedback (Koriat et al., 1980). In everyday life, weather forecasters and those who set the odds in horse racing both receive clear, daily feedback. Perhaps as a result, experts in both groups do quite well at estimating their probable accuracy.<br>When people think about why an idea might be true, it begins to seem true (Koehler, 1991). Thus, a second way to reduce overconfidence is to get people to think of one good reason why their judgments might be wrong; that is, force them to consider disconfirming information (Koriat et al., 1980). Managers might foster more realistic judgments by insisting that all proposals and recommendations include reasons why they might not work.</li></ul><p> 广度和深度<br>Range这本书提到了广度比深度更好的观点结合书评一万个小时够么-m.douban(https:m.douban.combookreview10306362) </p><p>作者提出的观点是一万小时理论很有价值但是有适用的场合限定更多的时候我们需要的是广度<br>第一类场景的特点面临的问题是一个相对明确清晰的规则并且有明确的客观的评价体系比如高尔夫某种程度上是一个自己和自己的比赛规则也无比的清晰最少的次数把球打进洞作者认为这一类问题是最适用一万小时理论的也就是在确定的规则下把技能打磨到极致<br>第二类场景的特点问题的本身并没有完全清晰的确定或者说问题本身的刻画就是解决问题的关键由于影响因素的复杂(比如研究国际形势问题的专家)多方参与的互动带来的复杂性(比如篮球运动员在场上的决策是需要相机抉择)这一类问题的解决深度很重要但是只有深度是不够的还需要广度(Range)<br>而我们生活中面临的场景第二类要显著多于第一类到底为什么广度对解决问题如此重要呢作者总结了这么几个原因</p><ol><li>我们需要外部思维来激发解决问题的思路</li><li>我们需要足够的样本(Sampling)来达成最佳的匹配<br>所以我们需要宽度(Range) 因为我们需要通过完成这个探索过程来确定真正适合自己的方向没有谁的人生是一锤子买卖不断保持这种宽度会让我们始终保持着寻找更加匹配方向的可能性</li><li>对深度的过分僵化追求在某些时候会阻碍我们解决问题<br>作者认为对于深度我们整个社会都极其推崇那种追求极致的导向但是从另外一方面我们应当根据具体的情况作出具体的选择没有谁规定人生一定要沿着起点的路线一直走下去因为我们在一开始作出的判断和选择往往会随着更多信息的获得和情况的改变而变得已经不合时宜这时候我们应该学会坦然的接受除了坚持和毅力还有广度和调整<br>总得来说我们的人生是一个不断选择的过程这个过程中需要解决各种各样的问题即使你把某一个领域作为自己一生奋斗的目标也可以从很多其他的领域获得输入你永远也不知道不同领域的知识摩擦会带来怎样的火花<br>对于我们大多数人来说应该有一个更加开放的心态我们的人生并非注定一定要在一条路上走下去在恰当的时间做出最有利的决定才是最重要的这个决定可能是坚持也可能是改变</li></ol><p> 好奇心<br>掌控习惯附录中作者提到了一个观点就是时刻保持好奇心只有好奇才会产生欲望因此最重要的是去承认自己的无知时刻保持对这个世界的好奇心</p><p>意识先于欲望当你赋予提示一定意义之后就会产生渴求你的大脑会构造一种情绪或感觉来描述你的现状这意味着渴求只会产生于你发现了机会之后<br>  幸福即无欲当你观察到提示但不想改变你的现状时说明你安于现状幸福无关获得快乐乐趣或满足而是事关欲望缺失当你没有体验不同感受的冲动时幸福就会到来<br>  渴望是想有所作为观察未引发渴望说明你没有意识到需要有任何作为你的欲望没有泛滥你不渴望改变现状你的头脑不会构想出问题让你去解决你只是在观察着无动于衷<br>好奇心总比头脑灵活好积极性和好奇心比头脑灵活更重要因为前者会导致行动头脑灵活永远不会独自产生结果因为它不会让你采取行动促使行为的是欲望而不是智力   </p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;pre&gt;&lt;code&gt;How to reduce overconfidence
&lt;/code&gt;&lt;/pre&gt;
社会心理学中提到了两个克服overconfidence的方法其中一个是prompt feedback立刻反馈另一个是思考为什么自己可能是错的&lt;br&gt;Two</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>团结大多数人,开源当以上游优先和如何打造真正的简历</title>
    <link href="https://felixgibson.github.io/2022/07/09/2022-07-09/"/>
    <id>https://felixgibson.github.io/2022/07/09/2022-07-09/</id>
    <published>2022-07-09T05:01:00.000Z</published>
    <updated>2025-03-07T12:39:03.948Z</updated>
    
    <content type="html"><![CDATA[<ul><li><pre><code>团结大多数人</code></pre>吴军在态度书中提到了不要孤立自己的观点有些同事可能不喜欢他们但是他们能力很强能够和他们好好相处是一个比较重要的能力<br>我们可以根据能力以及管理的难易程度把世界上的人分成4种第一种人和我们关系非常好做事总能配合我们而且能力很强这种人我们非常放心第二种人具有第一种人的特点但能力有限这种人我最后再谈第三种人有做事的能力但他们未必是你的朋友你们很难相处融洽如果他是你的下属未必会听话如果他是你的上司未必对你很公平这种人非常多这是我要谈的重点第四种人在上面两个维度都有些问题他们和我们的交集通常不多也就不必太在意因此在为人处世方面我们需要比较留意的是第二种人和第三种人<br>世界上有很多人他们既聪明又能干却未必让我们喜欢对于他们我们要有一个非常公允的态度不能因为他们和我们不同或者有某些缺陷就否认他们的能力进而否认他们的贡献<br>塔列朗这样的人按照中国过去的标准判断是所谓的能吏就是办事能力很强道德未必高尚的人在现实生活中我们周围很多人对我们来说就像塔列朗一样他们不可能和我们非常亲近但是当我们和他们利益一致时他们是很好的伙伴他们专业能力强而且忠于职守即便在很多观点上和我们不一致也能尽职尽责地把事情做好你今后在工作中的同事可能很多是属于塔列朗这样的人和他们处好关系是能够完成一项伟大事业的前提条件<br>很多人对人对事的判断完全根据自己的喜好符合自己喜好的人无论他们做什么都觉得好不符合自己喜好的人无论他们做什么都要挑毛病这种待人接物的态度不好大部分人对我们来说不会有恶意而我们也不能有洁癖对别人横挑鼻子竖挑眼我们要看到别人的长处并且善用他们的长处在工作中最蠢的办法就是把塔列朗这样的人推到我们的对立面事实上只要大家能设定一个共同目标把彼此的利益绑在一起遇到矛盾对事不对人就能团结大多数人把我们的事情做好</li></ul><p> 开源当以上游优先<br>最近读到一篇文章开源当以上游优先-xuanwo.io(https:xuanwo.ioreports2022-25) 比较有道理<br>采用上游优先则能够帮助减少我们内部魔改后无法跟进社区更新带来的维护负担和负资产<br>参与开源项目的贡献是维护自己利益的最佳方式开源项目不同于公司内部项目其决策受到开源共同体的整体利益驱动不参与到开源贡献中就缺乏对项目发展方向的影响力进而导致自己已有投资的全盘落空 </p><p> 如何打造真正的简历<br>geekplux在 “如何打造真正的简历”-geekplux(https:geekplux.compoststrue-resume) 中提到了<br>我参加过面试也面试过别人见过的简历大概分三种除基本信息外  </p><ol><li>只罗列技能这种简历的信息量为 0你不会这些技能怎么会来投递这个职位</li><li>罗列出辉煌的成绩项目看似丰满但我无法确定你在其中具体做了些什么</li><li>详细描述自己在各个项目的作用这种简历我认为最好但由于我对项目缺乏感知所以得进一步了解你</li></ol><p>建立影响力也是一种简历而且往往更加有效建立影响力的方式包括个人主页blog项目等等同时这也是一个增加”Lucky Surface”的过程就像程序员的喵在”你可以创造运气(https:catcoding.mepweekly-1)”中提到的”Lucky Surface Area”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;pre&gt;&lt;code&gt;团结大多数人
&lt;/code&gt;&lt;/pre&gt;
吴军在态度书中提到了不要孤立自己的观点有些同事可能不喜欢他们但是他们能力很强能够和他们好好相处是一个比较重要的能力&lt;br&gt;我们可以根据能力以及管理的难易程度把世界上的人分成4种第一种人和我们关系非常</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>创新,行为陷阱和创新者的窘境</title>
    <link href="https://felixgibson.github.io/2022/07/03/2022-07-03/"/>
    <id>https://felixgibson.github.io/2022/07/03/2022-07-03/</id>
    <published>2022-07-03T02:28:00.000Z</published>
    <updated>2025-03-07T12:39:03.946Z</updated>
    
    <content type="html"><![CDATA[<ul><li>分享最近一周读的书里面的一些观点<br> 创新<br>jamesclear(Atomic Habits的作者)在How Innovative Ideas Arise-jamesclear(https:jamesclear.comdont-start-from-scratch)  中提到了一个关于创新如何产生的方法Innovative thinkers don’t create, they connect. 这个观点很有意思<br>The most creative innovations are often new combinations of old ideas. Innovative thinkers don’t create, they connect. Furthermore, the most effective way to make progress is usually by making 1 percent improvements to what already works rather than breaking down the whole system and starting over.</li></ul><p>吴军老师在见识这本书中也提到了类似的观点<br>那些被认为是硅谷用来改变了世界的科技产品或者发明其实绝大部分最初都不是源于硅谷地区的<br>今天不少人也把颠覆现有行业放在嘴边但是真正实现了颠覆的人很少反而山寨的人却很多这又是为什么呢因为叛逆者们颠覆现有秩序不是一件容易的事情要想改变世界需要有常人所没有的执着桂谷的叛逆者们为了达到目的首先会想尽办法去寻找那些可能颠覆现有产业的技术注意是寻找而不是发明)这样那些在其他地区被发明却又被束之高阁的技术就被硅谷的颠覆者带到硅谷继续发扬光大在前一节中我讲到过新技术常常不可靠时灵时不灵要将这样的技术转变成产品需要有足够的耐心和智慧克服一个又一个困难走完从1到N的漫长路程<br>初创小公司要想和大公司竞争就不能完全按照大公司制定的市场规则来运作因为那样的胜算很低所以它们常常需要打擦边球颠覆现有的市场当然这并不是一件容易的事情既需要有新的技术和产品也需要站在巨人的肩膀上实现一个质的飞跃我常常把这种创新叫作N1即在原来的基础上更进一步</p><p> 行为陷阱<br>决策与判断中提到了五个行为陷阱分别是延期陷阱无知陷阱投入陷阱恶化陷阱集体陷阱其中减弱或者避免投入陷阱的方法可以是<br>在做出一个承诺之前把结束的成本明确化  </p><p> 创新者的窘境<br>创新者的窘境中有一个观点很有意思<br>当我们理解了决定世界运作方式的物理和心理法则然后学会了尊重或遵循这些法则时我们就能够最有效地激发我们的潜能这个观点当然不是本书的首创有这样一个小笑话斯坦福大学的罗伯特伯格尔曼教授本书大量引用了他的著作有一次在授课时不小心把钢笔掉在了地上他蹲下去捡笔时嘴里还喃喃自语我讨厌重力然后他走回黑板准备重新回到原来的思路上来这时他又接着说但你们知道吗重力可不管你喜不喜欢它永远会产生向下的吸引力而且我也可能因此而跌倒  </p><p>作者在这里指的意思是既然成熟公司会忽视破坏性技术这就像重力如果非要在成熟公司内部推广破坏性技术阻力很大因此不如成立一个单独的公司发展破坏性技术然后原公司持股原公司和新公司得尽量独立但是这样也会有一些问题比如新公司想要摆脱原公司的控制怎么办这也是需要考虑到的不过这应该是发展破坏性技术最好的方式了<br> Think Again<br>Think Again中提到了a bit of knowledge can be dangerous<br>Its when we progress from novice to amateur that we become overconfident. A bit of knowledge can be a dangerous thing. In too many domains of our lives, we never gain enough expertise to question our opinions or discover what we dont know. We have just enough information to feel self-assured about making pronouncements and passing judgment, failing to realize that weve climbed to the top of Mount Stupid without making it over to the other side.  </p><p> 描述性决策模型<br>决策与判断中提到了人们实际决策会采用的描述性决策模型比如注重损失过余注重小概率事件忽视基数值<br>损失额价值函数比收益的价值函数更为陡峭所以损失比收益显得更加突出一些<br>由于价值函数呈S形人们在面对收益时常常是规避风险的而在面临损失时则常常偏好风险<br>决策权重常常会强调小概率事件而忽视一般或者高概率事件  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;分享最近一周读的书里面的一些观点&lt;br&gt; 创新&lt;br&gt;jamesclear(Atomic Habits的作者)在How Innovative Ideas Arise-jamesclear(https:jamesclear.comdont-start-from-s</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>从Anki到Obsidian我的Spaced Repetition经历</title>
    <link href="https://felixgibson.github.io/2022/07/03/%E6%88%91%E4%BD%BF%E7%94%A8%E2%80%9C%E9%97%B4%E9%9A%94%E9%87%8D%E5%A4%8D%E2%80%9D%E7%9A%84%E7%BB%8F%E5%8E%86/"/>
    <id>https://felixgibson.github.io/2022/07/03/%E6%88%91%E4%BD%BF%E7%94%A8%E2%80%9C%E9%97%B4%E9%9A%94%E9%87%8D%E5%A4%8D%E2%80%9D%E7%9A%84%E7%BB%8F%E5%8E%86/</id>
    <published>2022-07-03T02:28:00.000Z</published>
    <updated>2025-03-07T12:39:03.945Z</updated>
    
    <content type="html"><![CDATA[<ul><li><pre><code>Spaced Repetition定义和作用</code></pre>间隔重复英文叫做”Spaced Repetition”关于它的定义可看Spaced repetition-en.wikipedia.org(https:en.wikipedia.orgwikiSpaced_repetition)<br>就我半年的使用来看Spaced Repetition有多个好处</li></ul><ol><li><p>能够回顾知识很多时候自己都是在犯过去同样的错误通过Spaced Repetition相当于加了一个超级强大的memo就像是动态规划算法一但做过某个东西下一次就可以直接拿来用</p></li><li><p>减少选择很多时候我们会面临选择的困境我们的选择太多会让选择这个过程就花费很多时间Spaced Repetition减少了选择你只需要不断地复习就行了至于复习哪些内容算法都帮你解决了其实抖音这类app也是利用了这个特点减少了用户的选择</p></li><li><p>孤立语义避免illusion of competence: 我在之前的博客(https:felixgibson.github.io202206052022-06-04)中提到了<br>many students experience illusions of competence when they are studying. repeatedly read their notes or textbook(despite the limited benefits of this strategy), but relatively few engage in self-testing or retrieval practice while studying</p><p> 很多人不断重复阅读书籍以为自己什么都会了但是一考试却发现实际上还是有很多空缺这是因为我们对书籍的整体太熟悉造成要打破这种熟悉增加单个知识点的连接就需要孤立每一个知识点这个可以通过Spaced Repetition做到</p></li></ol><p> 从Anki到Obsidian我的Spaced Repetition经历<br>第一次接触到Spaced Repetition是通过Anki用了一段时间发现制作卡片和回顾卡片都太独立没法整合到笔记系统中</p><p>后面把笔记系统从onenote切换到了logseq发现logseq自带的flashcards就是anki的便捷版本随后就开始在logseq上制作卡片然后回顾卡片但是在这个过程中发现一些Logseq的问题</p><ol><li>比如性能堪忧当我制作了500卡片时已经很卡顿了</li><li>功能不全面有bug比如flashcard不具备根据card-next-schedule进行排序的功能由此我还专门提了一个PR给Logseq官方(https:github.comlogseqlogseqpull4864)但是最终还是放弃了</li></ol><p>最后把笔记从Logseq迁移到Obsidian无意间发现obsidian-spaced-repetition(https:github.comst3v3nmwobsidian-spaced-repetition)这个插件但是用了一段时间后发现这个插件有一些功能不满足我的需求比如制作卡片不灵活它的”?”符号必须在行首且没有空格不支持tag 重新排序等等</p><p>最后自己fork了一个分支维护了起来由于和原仓库改动较大就没有提PR了目前当作自己在用而且README更新较慢<br>自己fork的分支的链接(https:github.comFelixGibsonobsidian-spaced-repetition)</p><p> 总结<br>Spaced Repetition适合那些需要一生记忆的知识对我来说它能够极大地提高我的效率希望大家读完本文章都能有所收获找到自己合适的学习方式</p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;pre&gt;&lt;code&gt;Spaced Repetition定义和作用
&lt;/code&gt;&lt;/pre&gt;
间隔重复英文叫做”Spaced Repetition”关于它的定义可看Spaced repetition-en.wikipedia.org(https:en.wiki</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>需求并没有凭空产生,Give and Take和心理分账</title>
    <link href="https://felixgibson.github.io/2022/06/23/2022-06-23/"/>
    <id>https://felixgibson.github.io/2022/06/23/2022-06-23/</id>
    <published>2022-06-23T06:46:00.000Z</published>
    <updated>2025-03-07T12:39:03.945Z</updated>
    
    <content type="html"><![CDATA[<ul><li><pre><code>需求并没有凭空产生</code></pre>见识里面提到一个观点<br>谷歌从事的是过去电视行业的视频传播和广告业同时取代了微软在操作系统中的地位亚马逊取代的是沃尔玛零售业以及 IBM 的企业级 IT 服务业务至于 Facebook则是一个将人联系起来的社交场所要知道在互联网出现之前美国中学生放学后平均每天通 两个小时的电话和今天玩儿微信或者 Facebook 的时间差不多也就是说中学生们的社交依然在那里 只是形态改变了而已</li></ul><p> Give and Take<br>Give and Take这本书中提到了作为Giver比Taker更好因为生活并不是零和游戏<br>在纯粹的零和游戏中付出很少能带来回报但是在大部分情况下生活并不是一场零和游戏那些将付出作为主要交互风格的人最终还是能获得回报付出者需要一些时间才能得到别人的善意和信任但是他们积累的名声和人际关系最终会帮助他们走向成功 </p><p> 心理分账<br>决策与判断这本书中提到了一个”心理分账”的概念比较有意思还有就是人们是根据比率-差异原则来做选择的两个金额之间的固定正差额的影响随着它们之间比率的增加而增加如何减少比率-差异原则小钱不要省大钱要谨慎<br>心理分账psychological accounting是指某一结果只是从动作直接结果的角度来描述特韦尔斯基和卡尼曼称之为简单账户还是需要综合考虑这一动作与其他行为的先前关系特韦尔斯基和卡尼曼称之为综合账户inclusive account<br>人们是根据比率-差异原则来做选择的两个金额之间的固定正差额的影响随着它们之间比率的增加而增加20美元与15美元的比率为1.33这当然比125美元与120美元的比率1.04更有影响力理查德塞勒Richard Thaler 1985在研究心理分账在消费选择中扮演的角色时也发现了类似的框架效应  </p><p> 对随机性的知觉<br>决策与判断提到了人们倾向于从随机序列中发现一定的模式如果事件都是独立的那么应该避免将短期重复看作是有意义的<br>我们很容易从一个随机序列中发现一定的模式在目睹了三至四次相同的结果以后绝大多数个体就可以得出结论这个序列中必定存在一定的模式当然如果特定的结果在现实生活中并不是经常发生的三到四次相同事件的发生确实具有一定的信息性例如很少进行人员调整的公司在很短时间内发生了三次人员调整但是如果情境都是由独立事件组成且结果相同那么三到四次相同结果的发生并不是不寻常的决策者应该尽量避免将相同结果的短期重复看做是有意义的  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;pre&gt;&lt;code&gt;需求并没有凭空产生
&lt;/code&gt;&lt;/pre&gt;
见识里面提到一个观点&lt;br&gt;谷歌从事的是过去电视行业的视频传播和广告业同时取代了微软在操作系统中的地位亚马逊取代的是沃尔玛零售业以及 IBM 的企业级 IT 服务业务至于 Facebook则是</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>自我实现预言,延续性技术和破坏性技术和数量的游戏</title>
    <link href="https://felixgibson.github.io/2022/06/18/2022-06-18/"/>
    <id>https://felixgibson.github.io/2022/06/18/2022-06-18/</id>
    <published>2022-06-18T01:42:00.000Z</published>
    <updated>2025-03-07T12:39:03.946Z</updated>
    
    <content type="html"><![CDATA[<ul><li><pre><code>自我实现预言</code></pre>决策与判断这本书提供一些方法来避免自我实现预言的产生包括1.关注动机因素2.证伪方式回答问题3.思考自己的判断在哪些情况下可能是错误的同样这些三个方法我认为也适合用来避免过度自信<br>避免证实偏好和自我实现的预言<br>1.关注动机因素<br>2.鼓励用证伪性回答的方式来组织问题<br>3.思考自己的判断在哪些情况下可能是错误的</li></ul><p> 延续性技术和破坏性技术<br>创新者的窘境中提到了延续性技术和破坏性技术这两个概念我认为这能够在一定程度上解释5G为什么是一个骗局而电动汽车却能够发展起来因为5G是属于延续性技术而电动汽车则属于破坏性技术加上电动汽车属于国家战略因此在双Buff叠加的情况下电动汽车能够大力发展消费者也能够买账<br>大多数新技术都会推动产品性能的改善我将这些技术称为延续性技术一些延续性技术可能不具有连续性或者在本质上具有突破性而其他一些则在本质上属于渐进式技术所有的延续性技术所具有的共同点就是它们都是根据主要市场的主流客户一直以来所看重的性能层面来提高成熟产品的性能特定行业的大多数技术进步从本质上说都具有延续性本书所揭示的一项重要发现就是即使是最具突破性最复杂的延续性技术也很少会导致领先企业失败<br>破坏性技术给市场带来了与以往截然不同的价值主张一般来说破坏性技术产品的性能要低于主流市场的成熟产品但它们拥有一些边缘客户通常也是新客户所看重的其他特性基于破坏性技术的产品通常价格更低性能更简单体积更小而且通常更便于客户使用除上文提到的台式个人电脑和折扣零售的例子外这方面还有许多例子相对于哈雷戴维森公司简称哈雷公司和宝马公司制造的大马力公路摩托车本田公司川崎公司和雅马哈公司在北美和欧洲推出的小型越野摩托车算得上是一种破坏性技术晶体管相对于真空管是一种破坏性技术保健机构相对于传统的医疗保险商也是一种破坏性技术在不远的未来相对于个人电脑硬件和软件供应商互联网工具可能也会成为一种破坏性技术</p><p> 解决抑郁的方法<br>情商这本书对抑郁提供了一些方法个人认为社交和有氧运动最为有效<br>社交比如外出就餐打球或看电影等总之是和朋友或家人一起从事某项活动需要注意的是不要选择诸如催泪电影悲情小说等会让情绪再次低落的东西<br>转移注意力如激烈的体育赛事滑稽的电影以及鼓舞人心的图书<br>有氧运动这是摆脱轻度抑郁以及其他消极情绪最有效的方法尤其是对很少外出活动的人最为有效<br>享受通过享受或感官愉悦使自己高兴起来是消除抑郁的另一种流行方法如洗热水澡吃喜爱的食物听音乐或逛街<br>换个角度思考问题用不同的眼光看待使人产生抑郁的事情或问题并以更加积极的态度坦然面对<br>帮助他人抑郁起源于对自身的沉思和关注因此如果我们对他人的痛苦感同身受对他人伸出援助之手将会使我们摆脱对自身的痴迷<br>宗教最后有些人还可以求助于超然的力量从悲伤情绪中解脱出来比如宗教祈祷</p><p> 局部创新<br>The Ambiguities of Experience(经验的疆界)中对局部创新做了一定解释个人认为很有道理创新不是无源之水需要多去增长见识避免井底之蛙<br>局部创新的一个主要特征就是创新者孤陋寡闻与初做学问的人相比经验丰富的学者不大可能宣称自己的东西是原创的  </p><p> 不要寄希望于技术突破<br>浪潮之巅提到了一个观点就是很多时候并不需要等待技术突破才能去做应用比如特斯拉特斯拉优势的地方并不是它设计了更高效率的电池而是它将已有的电池以一种更加高效的方式整合包括火箭也是这样集成火箭就是将小火箭合到一起并没有更高的创新有些时候创新并不是来自更底层同时可以联想到GAIGAI必然不需要硬件层面的突破和创新只需要软件甚至更高层的应用层软件的创新就可以了<br>和前三次工业革命类似在智能时代并不需要所有企业都去开发智能技术–它们只要用好智能技术把自己原有的产业做好就可以了有一点肯定核心技术的竞争在自动驾驶本身而不是在大家都要使用的人工智能芯片以及机器学习算法上事实上今天绝大部分自动驾驶汽车都采用英伟达的人工智能芯片以及通用的机器学习算法如果这个领域里哪家公司将中心放到了研制处理器或者试图改进基础的机器学习算法那就走错了路   </p><p> 运气和练习<br>决策与判断中相关和因果章节做了一些有趣的研究一个随机游戏但是被试还是认为练习和分心会影响成绩投掷骰子也是这样我们倾向于认为轻轻地投掷和很重地投掷会影响结果实际上并不是这样<br>大约40的被试认为练习能够提高他们预测的成绩25的被试认为分心会影响他们预测的成绩即使任务是预测一个偶然事件这样的研究结果与赌博者投掷骰子的情形是类似的他们如果想得到较小的数字他们就会很轻柔地投掷而如果想得到较大的数字他们就会很重地投掷  </p><p> 数量的游戏<br>错误的行为一书中提到了一个观点就是我们在小事上经常做导致我们能够做好它但是由于择偶房子职业等大事我们并不经常做导致我们并没有那么多学习的机会所以说反复练习才是王道<br>心理学家告诉我们要想从经验中有所收获就必须做两件事反复练习和及时反馈当这两个条件具备时比如我们学骑自行车或开车时我们会不断学习当然有时也会发生事故不过生活中很多问题都不会给我们这些学习机会这就引出了一个有趣的问题从某种角度上说学习和激励这两点是相互矛盾的把选择频率不同的对象从左向右排列午餐牛奶面包衣服汽车房子职业配偶小事要经常做所以人们能够学习如何做好它但房子工作配偶养老保险选择上我们就没有那么多学习的机会  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;pre&gt;&lt;code&gt;自我实现预言
&lt;/code&gt;&lt;/pre&gt;
决策与判断这本书提供一些方法来避免自我实现预言的产生包括1.关注动机因素2.证伪方式回答问题3.思考自己的判断在哪些情况下可能是错误的同样这些三个方法我认为也适合用来避免过度自信&lt;br&gt;避免证实偏好</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>足够好的软件,两种乐观和失望谷底</title>
    <link href="https://felixgibson.github.io/2022/06/12/2022-06-12/"/>
    <id>https://felixgibson.github.io/2022/06/12/2022-06-12/</id>
    <published>2022-06-12T09:40:00.000Z</published>
    <updated>2025-03-07T12:39:03.947Z</updated>
    
    <content type="html"><![CDATA[<ul><li>分享一下最近读的书和有感悟的文章</li></ul><p> 足够好的软件<br>程序员修炼之道有一个章节是叫做足够好的软件本章中提到了软件开发</p><ol><li>要让用户去参与权衡其实就是及时反馈</li><li>知道何时止步这点很容易忽视有些软件频繁地往上添加功能反而会适得其反这让我想到了现在的App比如知乎它能直播能视频这些功能反而脱离了它原本问答社区的初衷</li></ol><p>让用户参与权衡如果你给用户某样东西让他们及早使用他们的反馈常常会把你引向更好的最终解决方案</p><p>知道何时止步<br>在某些方面编程就像是绘画你从空白的画布和某些基本的原材料开始通过知识艺术和技艺的集合去确定用前者做些什么你勾画出全景绘制背景然后填入各种细节你不时后退一步用批判的眼光来观察你的作品常常你会扔掉画布重新再来<br>但艺术家会告诉你如果你不懂得应何时止步所有的辛苦劳作就会遭到损害如果你一层又一层细节复细节地叠加绘画就会迷失在绘制之中<br>不要因为过度修饰和过于求精而毁损完好的程序继续前进让你的代码凭自己的质量站立一会也许它并不完美但不用担心它不可能完美</p><p> 不妨审视一下自己的态度<br>在看态度这本书的时候无意间在豆瓣上看到一片书评感觉写得很好 不妨审视一下自己的态度(https:<a href="http://www.douban.comreview12394213/?dt_platformcom.douban.activity.wechat_friendsdt_dapp1)%E4%BD%9C%E8%80%85%E4%B9%9F%E6%98%AF%E4%B8%80%E4%B8%AA%E6%9C%89%E6%A2%A6%E6%83%B3%E7%9A%84%E4%BA%BA%E5%90%8C%E6%97%B6%E4%B9%9F%E6%8F%90%E9%86%92%E4%BA%86%E6%88%91%E5%85%AC%E5%8A%A1%E5%91%98%E9%93%81%E9%A5%AD%E7%A2%97%E4%B8%8D%E6%98%AF%E6%88%91%E6%83%B3%E8%A6%81%E7%9A%84%E7%94%9F%E6%B4%BB%E5%BD%93%E7%84%B6996%E7%A4%BE%E7%95%9C%E4%B9%9F%E4%B8%8D%E6%98%AF%E6%88%91%E6%83%B3%E8%A6%81%E7%9A%84%E7%94%9F%E6%B4%BB%E6%88%91%E8%87%AA%E5%B7%B1%E6%83%B3%E8%A6%81%E7%9A%84%E7%94%9F%E6%B4%BB%E5%BA%94%E8%AF%A5%E6%98%AF%E8%BF%BD%E6%B1%82%E5%B7%A5%E4%BD%9C%E5%92%8C%E7%94%9F%E6%B4%BB%E7%9A%84%E5%B9%B3%E8%A1%A1%E4%B8%8D%E7%94%A8%E8%B5%9A%E5%BE%88%E5%A4%9A%E9%92%B1%E8%83%BD%E5%A4%9F%E5%86%99%E8%87%AA%E5%B7%B1%E5%96%9C%E6%AC%A2%E7%9A%84%E4%BB%A3%E7%A0%81%E4%B8%8D%E8%BF%87%E4%BA%BA%E7%9A%84%E8%A7%82%E5%BF%B5%E6%80%BB%E6%98%AF%E5%9C%A8%E5%8A%A8%E6%80%81%E5%8F%98%E5%8C%96%E7%9A%84%E6%88%96%E8%AE%B8%E4%BB%A5%E5%90%8E%E6%88%91%E5%B7%A5%E4%BD%9C%E4%B9%8B%E5%90%8E%E6%80%81%E5%BA%A6%E4%BC%9A%E6%94%B9%E5%8F%98%E5%91%A2">www.douban.comreview12394213?dt_platformcom.douban.activity.wechat_friendsdt_dapp1)作者也是一个有梦想的人同时也提醒了我公务员铁饭碗不是我想要的生活当然996社畜也不是我想要的生活我自己想要的生活应该是追求工作和生活的平衡不用赚很多钱能够写自己喜欢的代码不过人的观念总是在动态变化的或许以后我工作之后态度会改变呢</a>  </p><p>我见过很多在外读书的大学生会在父母的要求下回到家乡的小县城当一个公务员老师医生生活得安稳舒服接触着小地方形成的固化关系网和处事态度不能说不好只能说这些同学的人生道路大概率是可以看得到尽头的<br>很多事情能用钱解决的通常都是成本最低的解决方式而很多人宁愿多花时间和精力走各种弯路看似省了不少钱可是付出的时间和精力难道就一文不值吗<br>幸运的是我在大学读了很多书也逼着自己勇敢地去表达自己尤其是在一些人比较多的公众场合尝试去做各种分享和演讲我在庆幸自己的同时也能看到身边很多人依然无法突破自己  </p><p> 相关因果关系与控制<br>决策与判断这本书提到了一个对两个事件相关的判别方法提到我们通常会注意到已经发生的事件而忽视了没有发生的事件理解这点应该会对决策有所帮助</p><p>为了验证两者之间的联系我们需要了解另外三个单元格中的信息1祈祷者的请求有多少没有得到应验2不管相信与否没有乞求的事情有多少发生了3没有乞求的事情有多少没有发生当然这个是没有办法进行计算的  </p><p>尽管这种方法表面上看起来是一种常识但是个体往往很少关注那些没有发生的事情正如尼斯比特和罗斯所指出的那样这就是为什么福尔摩斯看起来在解决银色马疑案时是如此聪明的原因他只不过考虑了晚上发生在狗身上的怪事当巡视员报告狗整晚都无所事事的时候福尔摩斯的回答是这是一件非常奇怪的事情尽管狗向入侵者咆哮是很正常的但是没有咆哮并不是说明没有入侵者也有可能入侵者是狗熟识的人因此福尔摩斯缩小了怀疑对象的范围</p><p> 两种乐观<br>Succeed: How We Can Reach Our Goals这本书11章keep it real提到了两种乐观一种乐观是相信你通过必要的努力做计划寻找合适的方法能够成功另一种乐观是认为成功是依赖外部的因素比如自己更加比别人更加聪明或者更加幸运作者提到了前一种乐观是更好的</p><p>The difference between unrealistic optimism, which is usually unproductive and sometimes dangerous, and realistic optimism, which is critical for achieving many of our goals, lies in why you are optimistic. When you are optimistic because you believe you can exert some control over whether you succeed or fail, by putting in the necessary effort, making plans, and finding the right strategies, thats realistic. Its also empowering and highly motivating. If, on the other hand, you are optimistic for reasons that are beyond your control, like relying on some fixed ability (Ill succeed because Im smarter than other people) or luck (Ill succeed because things always work out for me), it can be harmful. Odds are, you wont prepare for the task the way you should, and you will be too quick to give up when things start going badly for you.  </p><p> 赌徒谬论<br>决策与判断中有一章讲述代表性直觉其中很有意思的现象是小数法则和赌徒谬论</p><p>小数法则<br>认为从总体中抽取的随机样本相互之间是类似的与总体之间的接近程度比实际的统计抽样理论所预测的要高得多<br>赌徒谬论<br>代表性直觉可以导致人们承认赌徒谬论这种观点认为在一系列的坏运气之后必然会有好的结果出现(或者用更加通俗的话讲就是认为一系列结果相同的独立事件必然会跟随一个相反的结果)  </p><p> 失望谷底<br>掌控习惯一书中对习惯结果的滞后性提出了一个失望谷底的概念我认为不止习惯包括炒股好公司的股价也可能是这样的<br>我们经常期望进步是线性的至少我们希望它有立竿见影的效果实际上我们做出努力后结果的显现往往滞后或许在几个月或几年后我们才意识到以前工作的真正价值这可能会导致失望谷地的出现也就是人们在投入数周或数月的辛勤工作后却没有任何看得见的效果于是会深感沮丧然而功夫并没有白费它只是蓄积起来了直到很久以后以前努力的全部价值才会显露出来  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;分享一下最近读的书和有感悟的文章&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; 足够好的软件&lt;br&gt;程序员修炼之道有一个章节是叫做足够好的软件本章中提到了软件开发&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;要让用户去参与权衡其实就是及时反馈&lt;/li&gt;
&lt;li&gt;知道何时止步这点很容易忽视有些软件</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>经济学原理,好运气背后是三倍的努力和人生模式</title>
    <link href="https://felixgibson.github.io/2022/06/05/2022-06-04/"/>
    <id>https://felixgibson.github.io/2022/06/05/2022-06-04/</id>
    <published>2022-06-05T06:53:00.000Z</published>
    <updated>2025-03-07T12:39:03.948Z</updated>
    
    <content type="html"><![CDATA[<ul><li><pre><code>经济学原理</code></pre>最近在读经济学原理这本书它提到了一个观点高福利可能会导致穷人不依靠自己力量脱贫<br>有很多旨在帮助穷人的不同政策它们有意料之外的副作用由于经济援助随着收入增加而减少因此穷人往往面临很高的有效边际税率这种高有效税率不鼓励贫困家庭依靠自己的力量脱贫</li></ul><p> 好运气背后是三倍的努力<br>吴军在态度这本书中提到好运气背后是三倍的努力<br>好运气背后是三倍的努力<br>范佛里特将军聪明的地方在于他比其他人更多地估计了困难留出足够的余地这样幸运的天平才偏向了他那一边<br>因此孩子如果你想获得10分的成绩仅仅准备10分的努力是远远不够的你可能要准备30分的努力有时我们看到某些人有一些运气似乎偶然得到了他们想要的东西其实在这些运气背后可能是30分的努力我也不是从小就懂这个道理而是经过了一些失败和挫折才理解的直到今天我在做事情前都是先假设自己将遇到比别人更坏的运气也正因为如此我的准备通常比别人充足从外界来看我才有些好运气</p><p> 人生模式<br>阳志平的人生模式这本书还是有非常多新观点的承认自己在很多领域比不上别人比如吉他做饭职场或许可以让自己从焦虑和内卷之中缓解开来<br>心理韧性那些韧性强的标准六能够意识到自己在科研这样的领域可能做到标准七但是在艺术等领域只能做到标准三这样他们的动机强度适中自尊体系的来回切换不会导致情绪崩溃   </p><p>不少韧性差的标准六会走向极端在每个领域都伪装成标准六甚至标准七但其心理不具备在不同领域来回切换的能力整个人会绷得很紧表面上看他们具备高自尊高成就动机但是一旦在某个领域受到打击而且这个打击还被社交网络前三层的韧感知到了他们就会脆弱得失去动力滑向标准四  </p><p> 自控力<br>自控力一书中提到了一个难以预料的奖励的方法个人觉得还比较实用<br>在戒酒和戒毒的过程中最有效的干预治疗法被称为鱼缸法这就证明了难以预料的奖励究竟有多么强大的力量和有保证的小奖励相比我们的奖励系统面对可能获得的大奖会更加兴奋它会促使我们去做任何可能获奖的事这就是为什么人们宁愿买乐透彩票也不愿把钱存到银行里赚取有保障的2的利息这也就是为什么即便是公司最底层的员工也相信自己有朝一日能成为CEO  </p><p>比如自己最近在尝试用saving account搭配随机奖励方法养成习惯和戒东西比如自己跑了3公里就用一个app抽奖如果自己贪吃那么就从saving account扣除一定金额的钱发现还挺有用的<br> A Mind for Numbers<br>最近在看A Mind for Numbers书中的一个观点<br>Creativity is a numbers game: The best predictor of how many creative works we produce in our lifetime is the number of works we produce.   </p><p>这让我想到了自己Github项目追求的应该是数量而不是质量 </p><p>many students experience illusions of competence when they are studying. “repeatedly read their notes or textbook(despite the limited benefits of this strategy), but relatively few engage in self-testing or retrieval practice while studying”  </p><p>这种错觉似乎听常见的自己经常会有这种感受自己重复地去重头到尾读书会发现自己似乎什么都懂但面试的事后面对问题还是很难回答上来这种问题可以通过自测self-testing或者用flashcards的方式得到解决</p><p> 稳定<br>最近在公众号上发现了一个博主 ViviGoodenough她在”近期碎片记录  智慧关系与个人管理”-mp.weixin.qq(https:mp.weixin.qq.coms?__bizMzg5MDE4NjI0NQmid2247487583idx1sn212d6debba0d94d419de077a7acc3f29chksmcfe12f35f896a623a2a41b909f5a64f2cf86487073e9f6b06e53f299436c5111601490f645bfrd)中提到了一个观点自己深有感触<br>学校的培养体制让人习惯在划定的框架里做事你慢慢就变得希望别人来给自己定目标才不会觉得迷茫对边界的探索频频被大人禁止导致从小孩时候人就开始厌恶风险长大后习惯循规守旧也就是常说的做题家思维中国社会要的是一种老黄牛耕地般的安宁感不幸福也过得去但只要觉得踏实就好这思想钢印打得我们动弹不得如此看来长大就是一个想象力和创造力不断走向贫瘠的过程  </p><p>中国传统文化里受农耕文明的影响非常重视稳定这个概念在读费孝通先生的乡土中国时我也深刻体会到这种感觉  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;pre&gt;&lt;code&gt;经济学原理
&lt;/code&gt;&lt;/pre&gt;
最近在读经济学原理这本书它提到了一个观点高福利可能会导致穷人不依靠自己力量脱贫&lt;br&gt;有很多旨在帮助穷人的不同政策它们有意料之外的副作用由于经济援助随着收入增加而减少因此穷人往往面临很高的有效边际税率</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Formula for change运气</title>
    <link href="https://felixgibson.github.io/2022/06/05/2022-06-05/"/>
    <id>https://felixgibson.github.io/2022/06/05/2022-06-05/</id>
    <published>2022-06-05T06:53:00.000Z</published>
    <updated>2025-03-07T12:39:03.948Z</updated>
    
    <content type="html"><![CDATA[<p> Formula for change<br>wikipedia对Formula for change-wiki(https:en.wikipedia.orgwikiFormula_for_change)的解释是这样的<br>C  A  B  D  X<br>C is change;<br>A is the status quo dissatisfaction;<br>B is a desired clear state;<br>D is practical steps to the desired state;<br>X is the cost of the change.</p><p>这让我想到如果想要改变那么只需要增加这对应三个factor就可以了其中第2个factor让自己联想到冷哲在贫穷无法改变吗(https:<a href="http://www.zhihu.comquestion28098030answer53305160)中提到的无知的无知第3个factor对应目标的分解/">www.zhihu.comquestion28098030answer53305160)中提到的无知的无知第3个factor对应目标的分解</a></p><p> 你可以创造运气<br>程序员的喵在你可以创造运气(https:catcoding.mepweekly-1) 中提到了运气表面积的观点挺有意思的最近自己开始写博客也是为了让自己接触到更多的人<br>Luck Surface Area 运气表面积这个理论阐述的是运气对每个人是公平的只有扩大自己的运气横截面积才能让自己运气更好简而言之我们需要做更多并且把自己做的事分享出来  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; Formula for change&lt;br&gt;wikipedia对Formula for change-wiki(https:en.wikipedia.orgwikiFormula_for_change)的解释是这样的&lt;br&gt;C  A  B  D  X&lt;br&gt;C is ch</summary>
      
    
    
    
    
  </entry>
  
</feed>
